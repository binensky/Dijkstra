!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ADC_1CH	car_lib.h	18;"	d
ADC_2CH	car_lib.h	19;"	d
ADC_3CH	car_lib.h	20;"	d
ADC_4CH	car_lib.h	21;"	d
APP_data	videodev2.h	/^	char APP_data[60];      \/* Data in the JPEG APPn segment. *\/$/;"	m	struct:v4l2_jpegcompression
APP_len	videodev2.h	/^	int  APP_len;           \/* Length of data in JPEG APPn segment *\/$/;"	m	struct:v4l2_jpegcompression
APPn	videodev2.h	/^	int  APPn;              \/* Number of APP segment to be written,$/;"	m	struct:v4l2_jpegcompression
ASSERT	pxa_dbg.h	24;"	d
ASSERT	pxa_dbg.h	31;"	d
BASE_VIDIOC_PRIVATE	videodev2.h	1457;"	d
BAUDRATE	car_lib.h	29;"	d
BOT	cam_values.h	32;"	d
CAMERA_IMAGE_FORMAT_RAW10	pxa_camera_zl.h	75;"	d
CAMERA_IMAGE_FORMAT_RAW8	pxa_camera_zl.h	73;"	d
CAMERA_IMAGE_FORMAT_RAW9	pxa_camera_zl.h	74;"	d
CAMERA_IMAGE_FORMAT_RGB444	pxa_camera_zl.h	77;"	d
CAMERA_IMAGE_FORMAT_RGB555	pxa_camera_zl.h	78;"	d
CAMERA_IMAGE_FORMAT_RGB565	pxa_camera_zl.h	79;"	d
CAMERA_IMAGE_FORMAT_RGB666_PACKED	pxa_camera_zl.h	80;"	d
CAMERA_IMAGE_FORMAT_RGB666_PLANAR	pxa_camera_zl.h	81;"	d
CAMERA_IMAGE_FORMAT_RGB888_PACKED	pxa_camera_zl.h	82;"	d
CAMERA_IMAGE_FORMAT_RGB888_PLANAR	pxa_camera_zl.h	83;"	d
CAMERA_IMAGE_FORMAT_RGBT555_0	pxa_camera_zl.h	84;"	d
CAMERA_IMAGE_FORMAT_RGBT555_1	pxa_camera_zl.h	86;"	d
CAMERA_IMAGE_FORMAT_RGBT888_0	pxa_camera_zl.h	85;"	d
CAMERA_IMAGE_FORMAT_RGBT888_1	pxa_camera_zl.h	87;"	d
CAMERA_IMAGE_FORMAT_YCBCR400	pxa_camera_zl.h	89;"	d
CAMERA_IMAGE_FORMAT_YCBCR422_PACKED	pxa_camera_zl.h	90;"	d
CAMERA_IMAGE_FORMAT_YCBCR422_PLANAR	pxa_camera_zl.h	91;"	d
CAMERA_IMAGE_FORMAT_YCBCR444_PACKED	pxa_camera_zl.h	92;"	d
CAMERA_IMAGE_FORMAT_YCBCR444_PLANAR	pxa_camera_zl.h	93;"	d
CAM_MODE_STILL	pxa_lib.h	195;"	d
CAM_MODE_VIDEO	pxa_lib.h	194;"	d
CAM_STATUS_BUSY	cam_values.h	10;"	d
CAM_STATUS_INIT	cam_values.h	8;"	d
CAM_STATUS_READY	cam_values.h	9;"	d
CAPTURE_TYPE_STILL	pxa_camera_zl.h	114;"	d
CB	cam_values.h	63;"	d
CI_SSU_SCALE	pxa_camera_zl.h	/^} CI_SSU_SCALE;$/;"	t	typeref:enum:__anon2
CI_SSU_SCALE_DISABLE	pxa_camera_zl.h	/^    CI_SSU_SCALE_DISABLE   = 0,    \/\/ disabled$/;"	e	enum:__anon2
CI_SSU_SCALE_HALF	pxa_camera_zl.h	/^    CI_SSU_SCALE_HALF      = 1,    \/\/ 2:1$/;"	e	enum:__anon2
CI_SSU_SCALE_QUARTER	pxa_camera_zl.h	/^    CI_SSU_SCALE_QUARTER   = 2     \/\/ 4:1$/;"	e	enum:__anon2
CM_SPEED_MAX	miso_values.h	17;"	d
CM_SPEED_MIN	miso_values.h	18;"	d
CM_STRAIGHT	miso_values.h	41;"	d
COL_PASS	cam_values.h	55;"	d
COL_RED	cam_values.h	58;"	d
COL_UNKNOWN	cam_values.h	54;"	d
COL_WHITE	cam_values.h	57;"	d
COL_YELLOW	cam_values.h	56;"	d
COM_data	videodev2.h	/^	char COM_data[60];      \/* Data in JPEG COM segment *\/$/;"	m	struct:v4l2_jpegcompression
COM_len	videodev2.h	/^	int  COM_len;           \/* Length of data in JPEG COM segment *\/$/;"	m	struct:v4l2_jpegcompression
CR	cam_values.h	64;"	d
CUTLINE	cam_values.h	14;"	d
DBGMSG	pxa_dbg.h	25;"	d
DBGMSG	pxa_dbg.h	30;"	d
DF_CUR	miso_values.h	23;"	d
DF_END	miso_values.h	26;"	d
DF_PPARK	miso_values.h	25;"	d
DF_STOP	miso_values.h	21;"	d
DF_STR	miso_values.h	22;"	d
DF_VPARK	miso_values.h	24;"	d
DISTANCE_MAX	miso_values.h	13;"	d
DISTANCE_MIN	miso_values.h	14;"	d
DM_ANGLE_MAX	miso_values.h	15;"	d
DM_ANGLE_MIN	miso_values.h	16;"	d
DM_INTERVAL	miso_car_lib.h	9;"	d
DM_STRAIGHT	miso_values.h	40;"	d
DPRINTF	pxa_dbg.h	23;"	d
DPRINTF	pxa_dbg.h	29;"	d
EMERGENCY	car_lib.h	27;"	d
END	cam_values.h	34;"	d
ENTER	pxa_dbg.h	26;"	d
ENTER	pxa_dbg.h	32;"	d
ERRMSG	pxa_dbg.h	36;"	d
FALSE	miso_values.h	8;"	d
FL_FIND	cam_values.h	39;"	d
FL_NONE	cam_values.h	38;"	d
FL_PASS	cam_values.h	40;"	d
GAP	cam_values.h	15;"	d
HIGH	miso_car_lib.h	12;"	d
HST_COLOR_BLUE	pxa_camera_zl.h	/^    HST_COLOR_BLUE,$/;"	e	enum:__anon1
HST_COLOR_GREEN1	pxa_camera_zl.h	/^    HST_COLOR_GREEN1,$/;"	e	enum:__anon1
HST_COLOR_GREEN2	pxa_camera_zl.h	/^    HST_COLOR_GREEN2$/;"	e	enum:__anon1
HST_COLOR_RED	pxa_camera_zl.h	/^    HST_COLOR_RED,$/;"	e	enum:__anon1
IF_CL_LEFT	miso_values.h	33;"	d
IF_CL_RIGHT	miso_values.h	34;"	d
IF_DRIVE	miso_values.h	32;"	d
IF_NO_PROCESS	miso_values.h	29;"	d
IF_SG_LEFT	miso_values.h	37;"	d
IF_SG_RIGHT	miso_values.h	38;"	d
IF_SG_STOP	miso_values.h	36;"	d
IF_STOP	miso_values.h	31;"	d
IS_BLACK	cam_values.h	68;"	d
IS_RED	cam_values.h	69;"	d
IS_TRAFFIC_GREEN	cam_values.h	73;"	d
IS_TRAFFIC_RED	cam_values.h	71;"	d
IS_TRAFFIC_YELLOW	cam_values.h	72;"	d
IS_WHITE	cam_values.h	67;"	d
IS_YELLOW	cam_values.h	66;"	d
KEY1	key_handler.h	9;"	d
KEY2	key_handler.h	10;"	d
KEY3	key_handler.h	11;"	d
LEAVE	pxa_dbg.h	27;"	d
LEAVE	pxa_dbg.h	33;"	d
LEFT	car_lib.h	25;"	d
LOW	miso_car_lib.h	13;"	d
LSPEED_MAX	miso_values.h	11;"	d
LSPEED_MIN	miso_values.h	12;"	d
MAX	gaussian_filter.h	4;"	d
MAXHEIGHT	cam_values.h	49;"	d
MAXWIDTH	cam_values.h	50;"	d
MID	cam_values.h	33;"	d
MIDWIDTH	cam_values.h	51;"	d
MID_CL_LEFT	cam_values.h	45;"	d
MID_CL_RIGHT	cam_values.h	46;"	d
MID_DRIVE	cam_values.h	43;"	d
MID_STOP	cam_values.h	44;"	d
MODEDEVICE	car_lib.h	30;"	d
NONE	miso_values.h	5;"	d
OFF	car_lib.h	23;"	d
ON	car_lib.h	24;"	d
ON_STOP_LINE	sensor_handler.h	7;"	d
OV2620_SENSOR	pxa_camera_zl.h	120;"	d
OV2630_SENSOR	pxa_camera_zl.h	121;"	d
OV7660_SENSOR	pxa_camera_zl.h	119;"	d
PI	cam_values.h	5;"	d
PT_SIZE	cam_values.h	35;"	d
RANGE_LEFT	miso_car_lib.h	19;"	d
RANGE_NO_CHANGE	miso_car_lib.h	17;"	d
RANGE_RIGHT	miso_car_lib.h	18;"	d
RANGE_STRAIGHT	miso_car_lib.h	16;"	d
RGB565_BPP	pxa_camera_zl.h	100;"	d
RGB666_PACKED_BPP	pxa_camera_zl.h	102;"	d
RGB666_UNPACKED_BPP	pxa_camera_zl.h	101;"	d
RIGHT	car_lib.h	26;"	d
SIGMA	gaussian_filter.h	3;"	d
STATE_BUF_SIZE	state_manage.h	1;"	d
STATE_FILE	state_manage.h	3;"	d
STATE_TOKEN	state_manage.h	2;"	d
STILLBUF_COUNT	cam_values.h	7;"	d
STILL_IMAGE	pxa_camera_zl.h	107;"	d
THRESHOLD	cam_values.h	18;"	d
THRESHOLD_CB	cam_values.h	19;"	d
THRESHOLD_GREEN_CB	cam_values.h	26;"	d
THRESHOLD_GREEN_CR	cam_values.h	27;"	d
THRESHOLD_RED_CB	cam_values.h	22;"	d
THRESHOLD_RED_CR	cam_values.h	23;"	d
THRESHOLD_RED_MIN_CB	cam_values.h	21;"	d
THRESHOLD_STOP_CB	cam_values.h	29;"	d
THRESHOLD_STOP_CR	cam_values.h	30;"	d
THRESHOLD_YELLOW_CB	cam_values.h	24;"	d
THRESHOLD_YELLOW_CR	cam_values.h	25;"	d
TRUE	miso_values.h	7;"	d
V4L2_AUDCAP_AVL	videodev2.h	1181;"	d
V4L2_AUDCAP_STEREO	videodev2.h	1180;"	d
V4L2_AUDMODE_AVL	videodev2.h	1184;"	d
V4L2_BITRATE_CBR	videodev2.h	/^	V4L2_BITRATE_CBR,	\/* constant bitrate *\/$/;"	e	enum:v4l2_bitrate_mode
V4L2_BITRATE_NONE	videodev2.h	/^	V4L2_BITRATE_NONE = 0,	\/* not specified *\/$/;"	e	enum:v4l2_bitrate_mode
V4L2_BITRATE_VBR	videodev2.h	/^	V4L2_BITRATE_VBR,	\/* variable bitrate *\/$/;"	e	enum:v4l2_bitrate_mode
V4L2_BUF_FLAG_BFRAME	videodev2.h	578;"	d
V4L2_BUF_FLAG_DONE	videodev2.h	575;"	d
V4L2_BUF_FLAG_INPUT	videodev2.h	580;"	d
V4L2_BUF_FLAG_KEYFRAME	videodev2.h	576;"	d
V4L2_BUF_FLAG_MAPPED	videodev2.h	573;"	d
V4L2_BUF_FLAG_PFRAME	videodev2.h	577;"	d
V4L2_BUF_FLAG_QUEUED	videodev2.h	574;"	d
V4L2_BUF_FLAG_TIMECODE	videodev2.h	579;"	d
V4L2_BUF_TYPE_PRIVATE	videodev2.h	/^	V4L2_BUF_TYPE_PRIVATE            = 0x80,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_SLICED_VBI_CAPTURE	videodev2.h	/^	V4L2_BUF_TYPE_SLICED_VBI_CAPTURE = 6,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_SLICED_VBI_OUTPUT	videodev2.h	/^	V4L2_BUF_TYPE_SLICED_VBI_OUTPUT  = 7,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_VBI_CAPTURE	videodev2.h	/^	V4L2_BUF_TYPE_VBI_CAPTURE        = 4,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_VBI_OUTPUT	videodev2.h	/^	V4L2_BUF_TYPE_VBI_OUTPUT         = 5,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_VIDEO_CAPTURE	videodev2.h	/^	V4L2_BUF_TYPE_VIDEO_CAPTURE      = 1,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_VIDEO_OUTPUT	videodev2.h	/^	V4L2_BUF_TYPE_VIDEO_OUTPUT       = 2,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_VIDEO_OVERLAY	videodev2.h	/^	V4L2_BUF_TYPE_VIDEO_OVERLAY      = 3,$/;"	e	enum:v4l2_buf_type
V4L2_CAP_ASYNCIO	videodev2.h	236;"	d
V4L2_CAP_AUDIO	videodev2.h	232;"	d
V4L2_CAP_RADIO	videodev2.h	233;"	d
V4L2_CAP_RDS_CAPTURE	videodev2.h	229;"	d
V4L2_CAP_READWRITE	videodev2.h	235;"	d
V4L2_CAP_SLICED_VBI_CAPTURE	videodev2.h	227;"	d
V4L2_CAP_SLICED_VBI_OUTPUT	videodev2.h	228;"	d
V4L2_CAP_STREAMING	videodev2.h	237;"	d
V4L2_CAP_TIMEPERFRAME	videodev2.h	635;"	d
V4L2_CAP_TUNER	videodev2.h	231;"	d
V4L2_CAP_VBI_CAPTURE	videodev2.h	225;"	d
V4L2_CAP_VBI_OUTPUT	videodev2.h	226;"	d
V4L2_CAP_VIDEO_CAPTURE	videodev2.h	222;"	d
V4L2_CAP_VIDEO_OUTPUT	videodev2.h	223;"	d
V4L2_CAP_VIDEO_OVERLAY	videodev2.h	224;"	d
V4L2_CHIP_MATCH_HOST	videodev2.h	1361;"	d
V4L2_CHIP_MATCH_I2C_ADDR	videodev2.h	1363;"	d
V4L2_CHIP_MATCH_I2C_DRIVER	videodev2.h	1362;"	d
V4L2_CID_AUDIO_BALANCE	videodev2.h	904;"	d
V4L2_CID_AUDIO_BASS	videodev2.h	905;"	d
V4L2_CID_AUDIO_LOUDNESS	videodev2.h	908;"	d
V4L2_CID_AUDIO_MUTE	videodev2.h	907;"	d
V4L2_CID_AUDIO_TREBLE	videodev2.h	906;"	d
V4L2_CID_AUDIO_VOLUME	videodev2.h	903;"	d
V4L2_CID_AUTOGAIN	videodev2.h	917;"	d
V4L2_CID_AUTO_WHITE_BALANCE	videodev2.h	910;"	d
V4L2_CID_BASE	videodev2.h	893;"	d
V4L2_CID_BLACK_LEVEL	videodev2.h	909;"	d
V4L2_CID_BLUE_BALANCE	videodev2.h	913;"	d
V4L2_CID_BRIGHTNESS	videodev2.h	899;"	d
V4L2_CID_CONTRAST	videodev2.h	900;"	d
V4L2_CID_DO_WHITE_BALANCE	videodev2.h	911;"	d
V4L2_CID_EXPOSURE	videodev2.h	916;"	d
V4L2_CID_GAIN	videodev2.h	918;"	d
V4L2_CID_GAMMA	videodev2.h	914;"	d
V4L2_CID_HCENTER	videodev2.h	921;"	d
V4L2_CID_HFLIP	videodev2.h	919;"	d
V4L2_CID_HUE	videodev2.h	902;"	d
V4L2_CID_LASTP1	videodev2.h	923;"	d
V4L2_CID_MPEG_AUDIO_CRC	videodev2.h	1035;"	d
V4L2_CID_MPEG_AUDIO_EMPHASIS	videodev2.h	1029;"	d
V4L2_CID_MPEG_AUDIO_ENCODING	videodev2.h	958;"	d
V4L2_CID_MPEG_AUDIO_L1_BITRATE	videodev2.h	964;"	d
V4L2_CID_MPEG_AUDIO_L2_BITRATE	videodev2.h	981;"	d
V4L2_CID_MPEG_AUDIO_L3_BITRATE	videodev2.h	998;"	d
V4L2_CID_MPEG_AUDIO_MODE	videodev2.h	1015;"	d
V4L2_CID_MPEG_AUDIO_MODE_EXTENSION	videodev2.h	1022;"	d
V4L2_CID_MPEG_AUDIO_SAMPLING_FREQ	videodev2.h	952;"	d
V4L2_CID_MPEG_BASE	videodev2.h	926;"	d
V4L2_CID_MPEG_CLASS	videodev2.h	927;"	d
V4L2_CID_MPEG_CX2341X_BASE	videodev2.h	1068;"	d
V4L2_CID_MPEG_CX2341X_VIDEO_CHROMA_MEDIAN_FILTER_BOTTOM	videodev2.h	1104;"	d
V4L2_CID_MPEG_CX2341X_VIDEO_CHROMA_MEDIAN_FILTER_TOP	videodev2.h	1105;"	d
V4L2_CID_MPEG_CX2341X_VIDEO_CHROMA_SPATIAL_FILTER_TYPE	videodev2.h	1083;"	d
V4L2_CID_MPEG_CX2341X_VIDEO_LUMA_MEDIAN_FILTER_BOTTOM	videodev2.h	1102;"	d
V4L2_CID_MPEG_CX2341X_VIDEO_LUMA_MEDIAN_FILTER_TOP	videodev2.h	1103;"	d
V4L2_CID_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE	videodev2.h	1075;"	d
V4L2_CID_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE	videodev2.h	1094;"	d
V4L2_CID_MPEG_CX2341X_VIDEO_SPATIAL_FILTER	videodev2.h	1074;"	d
V4L2_CID_MPEG_CX2341X_VIDEO_SPATIAL_FILTER_MODE	videodev2.h	1069;"	d
V4L2_CID_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER	videodev2.h	1093;"	d
V4L2_CID_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER_MODE	videodev2.h	1088;"	d
V4L2_CID_MPEG_STREAM_PES_ID_AUDIO	videodev2.h	943;"	d
V4L2_CID_MPEG_STREAM_PES_ID_VIDEO	videodev2.h	944;"	d
V4L2_CID_MPEG_STREAM_PID_AUDIO	videodev2.h	940;"	d
V4L2_CID_MPEG_STREAM_PID_PCR	videodev2.h	942;"	d
V4L2_CID_MPEG_STREAM_PID_PMT	videodev2.h	939;"	d
V4L2_CID_MPEG_STREAM_PID_VIDEO	videodev2.h	941;"	d
V4L2_CID_MPEG_STREAM_TYPE	videodev2.h	930;"	d
V4L2_CID_MPEG_STREAM_VBI_FMT	videodev2.h	945;"	d
V4L2_CID_MPEG_VIDEO_ASPECT	videodev2.h	1047;"	d
V4L2_CID_MPEG_VIDEO_BITRATE	videodev2.h	1063;"	d
V4L2_CID_MPEG_VIDEO_BITRATE_MODE	videodev2.h	1058;"	d
V4L2_CID_MPEG_VIDEO_BITRATE_PEAK	videodev2.h	1064;"	d
V4L2_CID_MPEG_VIDEO_B_FRAMES	videodev2.h	1054;"	d
V4L2_CID_MPEG_VIDEO_ENCODING	videodev2.h	1042;"	d
V4L2_CID_MPEG_VIDEO_GOP_CLOSURE	videodev2.h	1056;"	d
V4L2_CID_MPEG_VIDEO_GOP_SIZE	videodev2.h	1055;"	d
V4L2_CID_MPEG_VIDEO_PULLDOWN	videodev2.h	1057;"	d
V4L2_CID_MPEG_VIDEO_TEMPORAL_DECIMATION	videodev2.h	1065;"	d
V4L2_CID_PRIVATE_BASE	videodev2.h	896;"	d
V4L2_CID_RED_BALANCE	videodev2.h	912;"	d
V4L2_CID_SATURATION	videodev2.h	901;"	d
V4L2_CID_USER_BASE	videodev2.h	894;"	d
V4L2_CID_USER_CLASS	videodev2.h	898;"	d
V4L2_CID_VCENTER	videodev2.h	922;"	d
V4L2_CID_VFLIP	videodev2.h	920;"	d
V4L2_CID_WHITENESS	videodev2.h	915;"	d
V4L2_COLORSPACE_470_SYSTEM_BG	videodev2.h	/^	V4L2_COLORSPACE_470_SYSTEM_BG = 6,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_470_SYSTEM_M	videodev2.h	/^	V4L2_COLORSPACE_470_SYSTEM_M  = 5,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_BT878	videodev2.h	/^	V4L2_COLORSPACE_BT878         = 4,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_JPEG	videodev2.h	/^	V4L2_COLORSPACE_JPEG          = 7,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_REC709	videodev2.h	/^	V4L2_COLORSPACE_REC709        = 3,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_SMPTE170M	videodev2.h	/^	V4L2_COLORSPACE_SMPTE170M     = 1,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_SMPTE240M	videodev2.h	/^	V4L2_COLORSPACE_SMPTE240M     = 2,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_SRGB	videodev2.h	/^	V4L2_COLORSPACE_SRGB          = 8,$/;"	e	enum:v4l2_colorspace
V4L2_CTRL_CLASS_MPEG	videodev2.h	852;"	d
V4L2_CTRL_CLASS_USER	videodev2.h	851;"	d
V4L2_CTRL_DRIVER_PRIV	videodev2.h	856;"	d
V4L2_CTRL_FLAG_DISABLED	videodev2.h	882;"	d
V4L2_CTRL_FLAG_GRABBED	videodev2.h	883;"	d
V4L2_CTRL_FLAG_INACTIVE	videodev2.h	886;"	d
V4L2_CTRL_FLAG_NEXT_CTRL	videodev2.h	890;"	d
V4L2_CTRL_FLAG_READ_ONLY	videodev2.h	884;"	d
V4L2_CTRL_FLAG_SLIDER	videodev2.h	887;"	d
V4L2_CTRL_FLAG_UPDATE	videodev2.h	885;"	d
V4L2_CTRL_ID2CLASS	videodev2.h	855;"	d
V4L2_CTRL_ID_MASK	videodev2.h	854;"	d
V4L2_CTRL_TYPE_BOOLEAN	videodev2.h	/^	V4L2_CTRL_TYPE_BOOLEAN	     = 2,$/;"	e	enum:v4l2_ctrl_type
V4L2_CTRL_TYPE_BUTTON	videodev2.h	/^	V4L2_CTRL_TYPE_BUTTON	     = 4,$/;"	e	enum:v4l2_ctrl_type
V4L2_CTRL_TYPE_CTRL_CLASS	videodev2.h	/^	V4L2_CTRL_TYPE_CTRL_CLASS    = 6,$/;"	e	enum:v4l2_ctrl_type
V4L2_CTRL_TYPE_INTEGER	videodev2.h	/^	V4L2_CTRL_TYPE_INTEGER	     = 1,$/;"	e	enum:v4l2_ctrl_type
V4L2_CTRL_TYPE_INTEGER64	videodev2.h	/^	V4L2_CTRL_TYPE_INTEGER64     = 5,$/;"	e	enum:v4l2_ctrl_type
V4L2_CTRL_TYPE_MENU	videodev2.h	/^	V4L2_CTRL_TYPE_MENU	     = 3,$/;"	e	enum:v4l2_ctrl_type
V4L2_ENC_CMD_PAUSE	videodev2.h	1225;"	d
V4L2_ENC_CMD_RESUME	videodev2.h	1226;"	d
V4L2_ENC_CMD_START	videodev2.h	1223;"	d
V4L2_ENC_CMD_STOP	videodev2.h	1224;"	d
V4L2_ENC_CMD_STOP_AT_GOP_END	videodev2.h	1229;"	d
V4L2_ENC_IDX_ENTRIES	videodev2.h	1214;"	d
V4L2_ENC_IDX_FRAME_B	videodev2.h	1203;"	d
V4L2_ENC_IDX_FRAME_I	videodev2.h	1201;"	d
V4L2_ENC_IDX_FRAME_MASK	videodev2.h	1204;"	d
V4L2_ENC_IDX_FRAME_P	videodev2.h	1202;"	d
V4L2_FBUF_CAP_BITMAP_CLIPPING	videodev2.h	598;"	d
V4L2_FBUF_CAP_CHROMAKEY	videodev2.h	596;"	d
V4L2_FBUF_CAP_EXTERNOVERLAY	videodev2.h	595;"	d
V4L2_FBUF_CAP_LIST_CLIPPING	videodev2.h	597;"	d
V4L2_FBUF_FLAG_CHROMAKEY	videodev2.h	602;"	d
V4L2_FBUF_FLAG_OVERLAY	videodev2.h	601;"	d
V4L2_FBUF_FLAG_PRIMARY	videodev2.h	600;"	d
V4L2_FIELD_ALTERNATE	videodev2.h	/^	V4L2_FIELD_ALTERNATE  = 7, \/* both fields alternating into$/;"	e	enum:v4l2_field
V4L2_FIELD_ANY	videodev2.h	/^	V4L2_FIELD_ANY        = 0, \/* driver can choose from none,$/;"	e	enum:v4l2_field
V4L2_FIELD_BOTTOM	videodev2.h	/^	V4L2_FIELD_BOTTOM     = 3, \/* bottom field only *\/$/;"	e	enum:v4l2_field
V4L2_FIELD_HAS_BOTH	videodev2.h	123;"	d
V4L2_FIELD_HAS_BOTTOM	videodev2.h	118;"	d
V4L2_FIELD_HAS_TOP	videodev2.h	113;"	d
V4L2_FIELD_INTERLACED	videodev2.h	/^	V4L2_FIELD_INTERLACED = 4, \/* both fields interlaced *\/$/;"	e	enum:v4l2_field
V4L2_FIELD_NONE	videodev2.h	/^	V4L2_FIELD_NONE       = 1, \/* this device has no fields ... *\/$/;"	e	enum:v4l2_field
V4L2_FIELD_SEQ_BT	videodev2.h	/^	V4L2_FIELD_SEQ_BT     = 6, \/* same as above + bottom-top order *\/$/;"	e	enum:v4l2_field
V4L2_FIELD_SEQ_TB	videodev2.h	/^	V4L2_FIELD_SEQ_TB     = 5, \/* both fields sequential into one$/;"	e	enum:v4l2_field
V4L2_FIELD_TOP	videodev2.h	/^	V4L2_FIELD_TOP        = 2, \/* top field only *\/$/;"	e	enum:v4l2_field
V4L2_FMT_FLAG_COMPRESSED	videodev2.h	314;"	d
V4L2_FRMIVAL_TYPE_CONTINUOUS	videodev2.h	/^	V4L2_FRMIVAL_TYPE_CONTINUOUS	= 2,$/;"	e	enum:v4l2_frmivaltypes
V4L2_FRMIVAL_TYPE_DISCRETE	videodev2.h	/^	V4L2_FRMIVAL_TYPE_DISCRETE	= 1,$/;"	e	enum:v4l2_frmivaltypes
V4L2_FRMIVAL_TYPE_STEPWISE	videodev2.h	/^	V4L2_FRMIVAL_TYPE_STEPWISE	= 3,$/;"	e	enum:v4l2_frmivaltypes
V4L2_FRMSIZE_TYPE_CONTINUOUS	videodev2.h	/^	V4L2_FRMSIZE_TYPE_CONTINUOUS	= 2,$/;"	e	enum:v4l2_frmsizetypes
V4L2_FRMSIZE_TYPE_DISCRETE	videodev2.h	/^	V4L2_FRMSIZE_TYPE_DISCRETE	= 1,$/;"	e	enum:v4l2_frmsizetypes
V4L2_FRMSIZE_TYPE_STEPWISE	videodev2.h	/^	V4L2_FRMSIZE_TYPE_STEPWISE	= 3,$/;"	e	enum:v4l2_frmsizetypes
V4L2_INPUT_TYPE_CAMERA	videodev2.h	782;"	d
V4L2_INPUT_TYPE_TUNER	videodev2.h	781;"	d
V4L2_IN_ST_COLOR_KILL	videodev2.h	791;"	d
V4L2_IN_ST_MACROVISION	videodev2.h	799;"	d
V4L2_IN_ST_NO_ACCESS	videodev2.h	800;"	d
V4L2_IN_ST_NO_CARRIER	videodev2.h	796;"	d
V4L2_IN_ST_NO_COLOR	videodev2.h	787;"	d
V4L2_IN_ST_NO_EQU	videodev2.h	795;"	d
V4L2_IN_ST_NO_H_LOCK	videodev2.h	790;"	d
V4L2_IN_ST_NO_POWER	videodev2.h	785;"	d
V4L2_IN_ST_NO_SIGNAL	videodev2.h	786;"	d
V4L2_IN_ST_NO_SYNC	videodev2.h	794;"	d
V4L2_IN_ST_VTR	videodev2.h	801;"	d
V4L2_JPEG_MARKER_APP	videodev2.h	535;"	d
V4L2_JPEG_MARKER_COM	videodev2.h	534;"	d
V4L2_JPEG_MARKER_DHT	videodev2.h	531;"	d
V4L2_JPEG_MARKER_DQT	videodev2.h	532;"	d
V4L2_JPEG_MARKER_DRI	videodev2.h	533;"	d
V4L2_MEMORY_MMAP	videodev2.h	/^	V4L2_MEMORY_MMAP             = 1,$/;"	e	enum:v4l2_memory
V4L2_MEMORY_OVERLAY	videodev2.h	/^	V4L2_MEMORY_OVERLAY          = 3,$/;"	e	enum:v4l2_memory
V4L2_MEMORY_USERPTR	videodev2.h	/^	V4L2_MEMORY_USERPTR          = 2,$/;"	e	enum:v4l2_memory
V4L2_MODE_HIGHQUALITY	videodev2.h	634;"	d
V4L2_MPEG_AC3	videodev2.h	/^	V4L2_MPEG_AC3,		\/* AC3 *\/$/;"	e	enum:v4l2_mpeg_audiotype
V4L2_MPEG_ASPECT_16_9	videodev2.h	/^	V4L2_MPEG_ASPECT_16_9   = 3,   \/* 16 : 9       *\/$/;"	e	enum:v4l2_mpeg_aspectratio
V4L2_MPEG_ASPECT_1_221	videodev2.h	/^	V4L2_MPEG_ASPECT_1_221  = 4,   \/*  1 : 2,21    *\/$/;"	e	enum:v4l2_mpeg_aspectratio
V4L2_MPEG_ASPECT_4_3	videodev2.h	/^	V4L2_MPEG_ASPECT_4_3    = 2,   \/*  4 : 3       *\/$/;"	e	enum:v4l2_mpeg_aspectratio
V4L2_MPEG_ASPECT_SQUARE	videodev2.h	/^	V4L2_MPEG_ASPECT_SQUARE = 1,   \/* square pixel *\/$/;"	e	enum:v4l2_mpeg_aspectratio
V4L2_MPEG_AUDIO_CRC_CRC16	videodev2.h	/^	V4L2_MPEG_AUDIO_CRC_CRC16 = 1,$/;"	e	enum:v4l2_mpeg_audio_crc
V4L2_MPEG_AUDIO_CRC_NONE	videodev2.h	/^	V4L2_MPEG_AUDIO_CRC_NONE  = 0,$/;"	e	enum:v4l2_mpeg_audio_crc
V4L2_MPEG_AUDIO_EMPHASIS_50_DIV_15_uS	videodev2.h	/^	V4L2_MPEG_AUDIO_EMPHASIS_50_DIV_15_uS = 1,$/;"	e	enum:v4l2_mpeg_audio_emphasis
V4L2_MPEG_AUDIO_EMPHASIS_CCITT_J17	videodev2.h	/^	V4L2_MPEG_AUDIO_EMPHASIS_CCITT_J17    = 2,$/;"	e	enum:v4l2_mpeg_audio_emphasis
V4L2_MPEG_AUDIO_EMPHASIS_NONE	videodev2.h	/^	V4L2_MPEG_AUDIO_EMPHASIS_NONE         = 0,$/;"	e	enum:v4l2_mpeg_audio_emphasis
V4L2_MPEG_AUDIO_ENCODING_LAYER_1	videodev2.h	/^	V4L2_MPEG_AUDIO_ENCODING_LAYER_1 = 0,$/;"	e	enum:v4l2_mpeg_audio_encoding
V4L2_MPEG_AUDIO_ENCODING_LAYER_2	videodev2.h	/^	V4L2_MPEG_AUDIO_ENCODING_LAYER_2 = 1,$/;"	e	enum:v4l2_mpeg_audio_encoding
V4L2_MPEG_AUDIO_ENCODING_LAYER_3	videodev2.h	/^	V4L2_MPEG_AUDIO_ENCODING_LAYER_3 = 2,$/;"	e	enum:v4l2_mpeg_audio_encoding
V4L2_MPEG_AUDIO_L1_BITRATE_128K	videodev2.h	/^	V4L2_MPEG_AUDIO_L1_BITRATE_128K = 3,$/;"	e	enum:v4l2_mpeg_audio_l1_bitrate
V4L2_MPEG_AUDIO_L1_BITRATE_160K	videodev2.h	/^	V4L2_MPEG_AUDIO_L1_BITRATE_160K = 4,$/;"	e	enum:v4l2_mpeg_audio_l1_bitrate
V4L2_MPEG_AUDIO_L1_BITRATE_192K	videodev2.h	/^	V4L2_MPEG_AUDIO_L1_BITRATE_192K = 5,$/;"	e	enum:v4l2_mpeg_audio_l1_bitrate
V4L2_MPEG_AUDIO_L1_BITRATE_224K	videodev2.h	/^	V4L2_MPEG_AUDIO_L1_BITRATE_224K = 6,$/;"	e	enum:v4l2_mpeg_audio_l1_bitrate
V4L2_MPEG_AUDIO_L1_BITRATE_256K	videodev2.h	/^	V4L2_MPEG_AUDIO_L1_BITRATE_256K = 7,$/;"	e	enum:v4l2_mpeg_audio_l1_bitrate
V4L2_MPEG_AUDIO_L1_BITRATE_288K	videodev2.h	/^	V4L2_MPEG_AUDIO_L1_BITRATE_288K = 8,$/;"	e	enum:v4l2_mpeg_audio_l1_bitrate
V4L2_MPEG_AUDIO_L1_BITRATE_320K	videodev2.h	/^	V4L2_MPEG_AUDIO_L1_BITRATE_320K = 9,$/;"	e	enum:v4l2_mpeg_audio_l1_bitrate
V4L2_MPEG_AUDIO_L1_BITRATE_32K	videodev2.h	/^	V4L2_MPEG_AUDIO_L1_BITRATE_32K  = 0,$/;"	e	enum:v4l2_mpeg_audio_l1_bitrate
V4L2_MPEG_AUDIO_L1_BITRATE_352K	videodev2.h	/^	V4L2_MPEG_AUDIO_L1_BITRATE_352K = 10,$/;"	e	enum:v4l2_mpeg_audio_l1_bitrate
V4L2_MPEG_AUDIO_L1_BITRATE_384K	videodev2.h	/^	V4L2_MPEG_AUDIO_L1_BITRATE_384K = 11,$/;"	e	enum:v4l2_mpeg_audio_l1_bitrate
V4L2_MPEG_AUDIO_L1_BITRATE_416K	videodev2.h	/^	V4L2_MPEG_AUDIO_L1_BITRATE_416K = 12,$/;"	e	enum:v4l2_mpeg_audio_l1_bitrate
V4L2_MPEG_AUDIO_L1_BITRATE_448K	videodev2.h	/^	V4L2_MPEG_AUDIO_L1_BITRATE_448K = 13,$/;"	e	enum:v4l2_mpeg_audio_l1_bitrate
V4L2_MPEG_AUDIO_L1_BITRATE_64K	videodev2.h	/^	V4L2_MPEG_AUDIO_L1_BITRATE_64K  = 1,$/;"	e	enum:v4l2_mpeg_audio_l1_bitrate
V4L2_MPEG_AUDIO_L1_BITRATE_96K	videodev2.h	/^	V4L2_MPEG_AUDIO_L1_BITRATE_96K  = 2,$/;"	e	enum:v4l2_mpeg_audio_l1_bitrate
V4L2_MPEG_AUDIO_L2_BITRATE_112K	videodev2.h	/^	V4L2_MPEG_AUDIO_L2_BITRATE_112K = 6,$/;"	e	enum:v4l2_mpeg_audio_l2_bitrate
V4L2_MPEG_AUDIO_L2_BITRATE_128K	videodev2.h	/^	V4L2_MPEG_AUDIO_L2_BITRATE_128K = 7,$/;"	e	enum:v4l2_mpeg_audio_l2_bitrate
V4L2_MPEG_AUDIO_L2_BITRATE_160K	videodev2.h	/^	V4L2_MPEG_AUDIO_L2_BITRATE_160K = 8,$/;"	e	enum:v4l2_mpeg_audio_l2_bitrate
V4L2_MPEG_AUDIO_L2_BITRATE_192K	videodev2.h	/^	V4L2_MPEG_AUDIO_L2_BITRATE_192K = 9,$/;"	e	enum:v4l2_mpeg_audio_l2_bitrate
V4L2_MPEG_AUDIO_L2_BITRATE_224K	videodev2.h	/^	V4L2_MPEG_AUDIO_L2_BITRATE_224K = 10,$/;"	e	enum:v4l2_mpeg_audio_l2_bitrate
V4L2_MPEG_AUDIO_L2_BITRATE_256K	videodev2.h	/^	V4L2_MPEG_AUDIO_L2_BITRATE_256K = 11,$/;"	e	enum:v4l2_mpeg_audio_l2_bitrate
V4L2_MPEG_AUDIO_L2_BITRATE_320K	videodev2.h	/^	V4L2_MPEG_AUDIO_L2_BITRATE_320K = 12,$/;"	e	enum:v4l2_mpeg_audio_l2_bitrate
V4L2_MPEG_AUDIO_L2_BITRATE_32K	videodev2.h	/^	V4L2_MPEG_AUDIO_L2_BITRATE_32K  = 0,$/;"	e	enum:v4l2_mpeg_audio_l2_bitrate
V4L2_MPEG_AUDIO_L2_BITRATE_384K	videodev2.h	/^	V4L2_MPEG_AUDIO_L2_BITRATE_384K = 13,$/;"	e	enum:v4l2_mpeg_audio_l2_bitrate
V4L2_MPEG_AUDIO_L2_BITRATE_48K	videodev2.h	/^	V4L2_MPEG_AUDIO_L2_BITRATE_48K  = 1,$/;"	e	enum:v4l2_mpeg_audio_l2_bitrate
V4L2_MPEG_AUDIO_L2_BITRATE_56K	videodev2.h	/^	V4L2_MPEG_AUDIO_L2_BITRATE_56K  = 2,$/;"	e	enum:v4l2_mpeg_audio_l2_bitrate
V4L2_MPEG_AUDIO_L2_BITRATE_64K	videodev2.h	/^	V4L2_MPEG_AUDIO_L2_BITRATE_64K  = 3,$/;"	e	enum:v4l2_mpeg_audio_l2_bitrate
V4L2_MPEG_AUDIO_L2_BITRATE_80K	videodev2.h	/^	V4L2_MPEG_AUDIO_L2_BITRATE_80K  = 4,$/;"	e	enum:v4l2_mpeg_audio_l2_bitrate
V4L2_MPEG_AUDIO_L2_BITRATE_96K	videodev2.h	/^	V4L2_MPEG_AUDIO_L2_BITRATE_96K  = 5,$/;"	e	enum:v4l2_mpeg_audio_l2_bitrate
V4L2_MPEG_AUDIO_L3_BITRATE_112K	videodev2.h	/^	V4L2_MPEG_AUDIO_L3_BITRATE_112K = 7,$/;"	e	enum:v4l2_mpeg_audio_l3_bitrate
V4L2_MPEG_AUDIO_L3_BITRATE_128K	videodev2.h	/^	V4L2_MPEG_AUDIO_L3_BITRATE_128K = 8,$/;"	e	enum:v4l2_mpeg_audio_l3_bitrate
V4L2_MPEG_AUDIO_L3_BITRATE_160K	videodev2.h	/^	V4L2_MPEG_AUDIO_L3_BITRATE_160K = 9,$/;"	e	enum:v4l2_mpeg_audio_l3_bitrate
V4L2_MPEG_AUDIO_L3_BITRATE_192K	videodev2.h	/^	V4L2_MPEG_AUDIO_L3_BITRATE_192K = 10,$/;"	e	enum:v4l2_mpeg_audio_l3_bitrate
V4L2_MPEG_AUDIO_L3_BITRATE_224K	videodev2.h	/^	V4L2_MPEG_AUDIO_L3_BITRATE_224K = 11,$/;"	e	enum:v4l2_mpeg_audio_l3_bitrate
V4L2_MPEG_AUDIO_L3_BITRATE_256K	videodev2.h	/^	V4L2_MPEG_AUDIO_L3_BITRATE_256K = 12,$/;"	e	enum:v4l2_mpeg_audio_l3_bitrate
V4L2_MPEG_AUDIO_L3_BITRATE_320K	videodev2.h	/^	V4L2_MPEG_AUDIO_L3_BITRATE_320K = 13,$/;"	e	enum:v4l2_mpeg_audio_l3_bitrate
V4L2_MPEG_AUDIO_L3_BITRATE_32K	videodev2.h	/^	V4L2_MPEG_AUDIO_L3_BITRATE_32K  = 0,$/;"	e	enum:v4l2_mpeg_audio_l3_bitrate
V4L2_MPEG_AUDIO_L3_BITRATE_40K	videodev2.h	/^	V4L2_MPEG_AUDIO_L3_BITRATE_40K  = 1,$/;"	e	enum:v4l2_mpeg_audio_l3_bitrate
V4L2_MPEG_AUDIO_L3_BITRATE_48K	videodev2.h	/^	V4L2_MPEG_AUDIO_L3_BITRATE_48K  = 2,$/;"	e	enum:v4l2_mpeg_audio_l3_bitrate
V4L2_MPEG_AUDIO_L3_BITRATE_56K	videodev2.h	/^	V4L2_MPEG_AUDIO_L3_BITRATE_56K  = 3,$/;"	e	enum:v4l2_mpeg_audio_l3_bitrate
V4L2_MPEG_AUDIO_L3_BITRATE_64K	videodev2.h	/^	V4L2_MPEG_AUDIO_L3_BITRATE_64K  = 4,$/;"	e	enum:v4l2_mpeg_audio_l3_bitrate
V4L2_MPEG_AUDIO_L3_BITRATE_80K	videodev2.h	/^	V4L2_MPEG_AUDIO_L3_BITRATE_80K  = 5,$/;"	e	enum:v4l2_mpeg_audio_l3_bitrate
V4L2_MPEG_AUDIO_L3_BITRATE_96K	videodev2.h	/^	V4L2_MPEG_AUDIO_L3_BITRATE_96K  = 6,$/;"	e	enum:v4l2_mpeg_audio_l3_bitrate
V4L2_MPEG_AUDIO_MODE_DUAL	videodev2.h	/^	V4L2_MPEG_AUDIO_MODE_DUAL         = 2,$/;"	e	enum:v4l2_mpeg_audio_mode
V4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_12	videodev2.h	/^	V4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_12 = 2,$/;"	e	enum:v4l2_mpeg_audio_mode_extension
V4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_16	videodev2.h	/^	V4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_16 = 3,$/;"	e	enum:v4l2_mpeg_audio_mode_extension
V4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_4	videodev2.h	/^	V4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_4  = 0,$/;"	e	enum:v4l2_mpeg_audio_mode_extension
V4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_8	videodev2.h	/^	V4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_8  = 1,$/;"	e	enum:v4l2_mpeg_audio_mode_extension
V4L2_MPEG_AUDIO_MODE_JOINT_STEREO	videodev2.h	/^	V4L2_MPEG_AUDIO_MODE_JOINT_STEREO = 1,$/;"	e	enum:v4l2_mpeg_audio_mode
V4L2_MPEG_AUDIO_MODE_MONO	videodev2.h	/^	V4L2_MPEG_AUDIO_MODE_MONO         = 3,$/;"	e	enum:v4l2_mpeg_audio_mode
V4L2_MPEG_AUDIO_MODE_STEREO	videodev2.h	/^	V4L2_MPEG_AUDIO_MODE_STEREO       = 0,$/;"	e	enum:v4l2_mpeg_audio_mode
V4L2_MPEG_AUDIO_SAMPLING_FREQ_32000	videodev2.h	/^	V4L2_MPEG_AUDIO_SAMPLING_FREQ_32000 = 2,$/;"	e	enum:v4l2_mpeg_audio_sampling_freq
V4L2_MPEG_AUDIO_SAMPLING_FREQ_44100	videodev2.h	/^	V4L2_MPEG_AUDIO_SAMPLING_FREQ_44100 = 0,$/;"	e	enum:v4l2_mpeg_audio_sampling_freq
V4L2_MPEG_AUDIO_SAMPLING_FREQ_48000	videodev2.h	/^	V4L2_MPEG_AUDIO_SAMPLING_FREQ_48000 = 1,$/;"	e	enum:v4l2_mpeg_audio_sampling_freq
V4L2_MPEG_AU_2_I	videodev2.h	/^	V4L2_MPEG_AU_2_I,	\/* MPEG-2 layer 1 *\/$/;"	e	enum:v4l2_mpeg_audiotype
V4L2_MPEG_AU_2_II	videodev2.h	/^	V4L2_MPEG_AU_2_II,	\/* MPEG-2 layer 2 *\/$/;"	e	enum:v4l2_mpeg_audiotype
V4L2_MPEG_AU_2_III	videodev2.h	/^	V4L2_MPEG_AU_2_III,	\/* MPEG-2 layer 3 *\/$/;"	e	enum:v4l2_mpeg_audiotype
V4L2_MPEG_CX2341X_VIDEO_CHROMA_SPATIAL_FILTER_TYPE_1D_HOR	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_CHROMA_SPATIAL_FILTER_TYPE_1D_HOR = 1,$/;"	e	enum:v4l2_mpeg_cx2341x_video_chroma_spatial_filter_type
V4L2_MPEG_CX2341X_VIDEO_CHROMA_SPATIAL_FILTER_TYPE_OFF	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_CHROMA_SPATIAL_FILTER_TYPE_OFF    = 0,$/;"	e	enum:v4l2_mpeg_cx2341x_video_chroma_spatial_filter_type
V4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_1D_HOR	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_1D_HOR               = 1,$/;"	e	enum:v4l2_mpeg_cx2341x_video_luma_spatial_filter_type
V4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_1D_VERT	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_1D_VERT              = 2,$/;"	e	enum:v4l2_mpeg_cx2341x_video_luma_spatial_filter_type
V4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_2D_HV_SEPARABLE	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_2D_HV_SEPARABLE      = 3,$/;"	e	enum:v4l2_mpeg_cx2341x_video_luma_spatial_filter_type
V4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_2D_SYM_NON_SEPARABLE	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_2D_SYM_NON_SEPARABLE = 4,$/;"	e	enum:v4l2_mpeg_cx2341x_video_luma_spatial_filter_type
V4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_OFF	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_OFF                  = 0,$/;"	e	enum:v4l2_mpeg_cx2341x_video_luma_spatial_filter_type
V4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_DIAG	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_DIAG     = 4,$/;"	e	enum:v4l2_mpeg_cx2341x_video_median_filter_type
V4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_HOR	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_HOR      = 1,$/;"	e	enum:v4l2_mpeg_cx2341x_video_median_filter_type
V4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_HOR_VERT	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_HOR_VERT = 3,$/;"	e	enum:v4l2_mpeg_cx2341x_video_median_filter_type
V4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_OFF	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_OFF      = 0,$/;"	e	enum:v4l2_mpeg_cx2341x_video_median_filter_type
V4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_VERT	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_VERT     = 2,$/;"	e	enum:v4l2_mpeg_cx2341x_video_median_filter_type
V4L2_MPEG_CX2341X_VIDEO_SPATIAL_FILTER_MODE_AUTO	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_SPATIAL_FILTER_MODE_AUTO   = 1,$/;"	e	enum:v4l2_mpeg_cx2341x_video_spatial_filter_mode
V4L2_MPEG_CX2341X_VIDEO_SPATIAL_FILTER_MODE_MANUAL	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_SPATIAL_FILTER_MODE_MANUAL = 0,$/;"	e	enum:v4l2_mpeg_cx2341x_video_spatial_filter_mode
V4L2_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER_MODE_AUTO	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER_MODE_AUTO   = 1,$/;"	e	enum:v4l2_mpeg_cx2341x_video_temporal_filter_mode
V4L2_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER_MODE_MANUAL	videodev2.h	/^	V4L2_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER_MODE_MANUAL = 0,$/;"	e	enum:v4l2_mpeg_cx2341x_video_temporal_filter_mode
V4L2_MPEG_LPCM	videodev2.h	/^	V4L2_MPEG_LPCM,		\/* LPCM *\/$/;"	e	enum:v4l2_mpeg_audiotype
V4L2_MPEG_PS_2	videodev2.h	/^	V4L2_MPEG_PS_2,		\/* MPEG-2 program stream *\/$/;"	e	enum:v4l2_mpeg_streamtype
V4L2_MPEG_PS_DVD	videodev2.h	/^	V4L2_MPEG_PS_DVD,      	\/* MPEG-2 program stream with DVD header fixups *\/$/;"	e	enum:v4l2_mpeg_streamtype
V4L2_MPEG_SS_1	videodev2.h	/^	V4L2_MPEG_SS_1,		\/* MPEG-1 system stream *\/$/;"	e	enum:v4l2_mpeg_streamtype
V4L2_MPEG_STREAM_TYPE_MPEG1_SS	videodev2.h	/^	V4L2_MPEG_STREAM_TYPE_MPEG1_SS   = 2, \/* MPEG-1 system stream *\/$/;"	e	enum:v4l2_mpeg_stream_type
V4L2_MPEG_STREAM_TYPE_MPEG1_VCD	videodev2.h	/^	V4L2_MPEG_STREAM_TYPE_MPEG1_VCD  = 4, \/* MPEG-1 VCD-compatible stream *\/$/;"	e	enum:v4l2_mpeg_stream_type
V4L2_MPEG_STREAM_TYPE_MPEG2_DVD	videodev2.h	/^	V4L2_MPEG_STREAM_TYPE_MPEG2_DVD  = 3, \/* MPEG-2 DVD-compatible stream *\/$/;"	e	enum:v4l2_mpeg_stream_type
V4L2_MPEG_STREAM_TYPE_MPEG2_PS	videodev2.h	/^	V4L2_MPEG_STREAM_TYPE_MPEG2_PS   = 0, \/* MPEG-2 program stream *\/$/;"	e	enum:v4l2_mpeg_stream_type
V4L2_MPEG_STREAM_TYPE_MPEG2_SVCD	videodev2.h	/^	V4L2_MPEG_STREAM_TYPE_MPEG2_SVCD = 5, \/* MPEG-2 SVCD-compatible stream *\/$/;"	e	enum:v4l2_mpeg_stream_type
V4L2_MPEG_STREAM_TYPE_MPEG2_TS	videodev2.h	/^	V4L2_MPEG_STREAM_TYPE_MPEG2_TS   = 1, \/* MPEG-2 transport stream *\/$/;"	e	enum:v4l2_mpeg_stream_type
V4L2_MPEG_STREAM_VBI_FMT_IVTV	videodev2.h	/^	V4L2_MPEG_STREAM_VBI_FMT_IVTV = 1,  \/* VBI in private packets, IVTV format *\/$/;"	e	enum:v4l2_mpeg_stream_vbi_fmt
V4L2_MPEG_STREAM_VBI_FMT_NONE	videodev2.h	/^	V4L2_MPEG_STREAM_VBI_FMT_NONE = 0,  \/* No VBI in the MPEG stream *\/$/;"	e	enum:v4l2_mpeg_stream_vbi_fmt
V4L2_MPEG_TS_2	videodev2.h	/^	V4L2_MPEG_TS_2,		\/* MPEG-2 transport stream *\/$/;"	e	enum:v4l2_mpeg_streamtype
V4L2_MPEG_VIDEO_ASPECT_16x9	videodev2.h	/^	V4L2_MPEG_VIDEO_ASPECT_16x9    = 2,$/;"	e	enum:v4l2_mpeg_video_aspect
V4L2_MPEG_VIDEO_ASPECT_1x1	videodev2.h	/^	V4L2_MPEG_VIDEO_ASPECT_1x1     = 0,$/;"	e	enum:v4l2_mpeg_video_aspect
V4L2_MPEG_VIDEO_ASPECT_221x100	videodev2.h	/^	V4L2_MPEG_VIDEO_ASPECT_221x100 = 3,$/;"	e	enum:v4l2_mpeg_video_aspect
V4L2_MPEG_VIDEO_ASPECT_4x3	videodev2.h	/^	V4L2_MPEG_VIDEO_ASPECT_4x3     = 1,$/;"	e	enum:v4l2_mpeg_video_aspect
V4L2_MPEG_VIDEO_BITRATE_MODE_CBR	videodev2.h	/^	V4L2_MPEG_VIDEO_BITRATE_MODE_CBR = 1,$/;"	e	enum:v4l2_mpeg_video_bitrate_mode
V4L2_MPEG_VIDEO_BITRATE_MODE_VBR	videodev2.h	/^	V4L2_MPEG_VIDEO_BITRATE_MODE_VBR = 0,$/;"	e	enum:v4l2_mpeg_video_bitrate_mode
V4L2_MPEG_VIDEO_ENCODING_MPEG_1	videodev2.h	/^	V4L2_MPEG_VIDEO_ENCODING_MPEG_1 = 0,$/;"	e	enum:v4l2_mpeg_video_encoding
V4L2_MPEG_VIDEO_ENCODING_MPEG_2	videodev2.h	/^	V4L2_MPEG_VIDEO_ENCODING_MPEG_2 = 1,$/;"	e	enum:v4l2_mpeg_video_encoding
V4L2_MPEG_VI_1	videodev2.h	/^	V4L2_MPEG_VI_1,		\/* MPEG-1 *\/$/;"	e	enum:v4l2_mpeg_videotype
V4L2_MPEG_VI_2	videodev2.h	/^	V4L2_MPEG_VI_2,		\/* MPEG-2 *\/$/;"	e	enum:v4l2_mpeg_videotype
V4L2_OUTPUT_TYPE_ANALOG	videodev2.h	818;"	d
V4L2_OUTPUT_TYPE_ANALOGVGAOVERLAY	videodev2.h	819;"	d
V4L2_OUTPUT_TYPE_MODULATOR	videodev2.h	817;"	d
V4L2_PIX_FMT_BGR24	videodev2.h	260;"	d
V4L2_PIX_FMT_BGR32	videodev2.h	262;"	d
V4L2_PIX_FMT_DV	videodev2.h	291;"	d
V4L2_PIX_FMT_ET61X251	videodev2.h	299;"	d
V4L2_PIX_FMT_GREY	videodev2.h	264;"	d
V4L2_PIX_FMT_HI240	videodev2.h	281;"	d
V4L2_PIX_FMT_HM12	videodev2.h	282;"	d
V4L2_PIX_FMT_JPEG	videodev2.h	290;"	d
V4L2_PIX_FMT_MJPEG	videodev2.h	289;"	d
V4L2_PIX_FMT_MPEG	videodev2.h	292;"	d
V4L2_PIX_FMT_NV12	videodev2.h	274;"	d
V4L2_PIX_FMT_NV21	videodev2.h	275;"	d
V4L2_PIX_FMT_PWC1	videodev2.h	297;"	d
V4L2_PIX_FMT_PWC2	videodev2.h	298;"	d
V4L2_PIX_FMT_RGB24	videodev2.h	261;"	d
V4L2_PIX_FMT_RGB32	videodev2.h	263;"	d
V4L2_PIX_FMT_RGB332	videodev2.h	255;"	d
V4L2_PIX_FMT_RGB444	videodev2.h	283;"	d
V4L2_PIX_FMT_RGB555	videodev2.h	256;"	d
V4L2_PIX_FMT_RGB555X	videodev2.h	258;"	d
V4L2_PIX_FMT_RGB565	videodev2.h	257;"	d
V4L2_PIX_FMT_RGB565X	videodev2.h	259;"	d
V4L2_PIX_FMT_SBGGR8	videodev2.h	286;"	d
V4L2_PIX_FMT_SN9C10X	videodev2.h	296;"	d
V4L2_PIX_FMT_SRGGB10	pxa_camera_zl.h	145;"	d
V4L2_PIX_FMT_SRGGB8	pxa_camera_zl.h	144;"	d
V4L2_PIX_FMT_UYVY	videodev2.h	268;"	d
V4L2_PIX_FMT_WNVA	videodev2.h	295;"	d
V4L2_PIX_FMT_Y41P	videodev2.h	271;"	d
V4L2_PIX_FMT_YUV410	videodev2.h	278;"	d
V4L2_PIX_FMT_YUV411P	videodev2.h	270;"	d
V4L2_PIX_FMT_YUV420	videodev2.h	279;"	d
V4L2_PIX_FMT_YUV422P	videodev2.h	269;"	d
V4L2_PIX_FMT_YUYV	videodev2.h	267;"	d
V4L2_PIX_FMT_YVU410	videodev2.h	265;"	d
V4L2_PIX_FMT_YVU420	videodev2.h	266;"	d
V4L2_PIX_FMT_YYUV	videodev2.h	280;"	d
V4L2_PRIORITY_BACKGROUND	videodev2.h	/^	V4L2_PRIORITY_BACKGROUND  = 1,$/;"	e	enum:v4l2_priority
V4L2_PRIORITY_DEFAULT	videodev2.h	/^	V4L2_PRIORITY_DEFAULT     = V4L2_PRIORITY_INTERACTIVE,$/;"	e	enum:v4l2_priority
V4L2_PRIORITY_INTERACTIVE	videodev2.h	/^	V4L2_PRIORITY_INTERACTIVE = 2,$/;"	e	enum:v4l2_priority
V4L2_PRIORITY_RECORD	videodev2.h	/^	V4L2_PRIORITY_RECORD      = 3,$/;"	e	enum:v4l2_priority
V4L2_PRIORITY_UNSET	videodev2.h	/^	V4L2_PRIORITY_UNSET       = 0,  \/* not initialized *\/$/;"	e	enum:v4l2_priority
V4L2_SLICED_CAPTION_525	videodev2.h	1292;"	d
V4L2_SLICED_TELETEXT_B	videodev2.h	1288;"	d
V4L2_SLICED_VBI_525	videodev2.h	1296;"	d
V4L2_SLICED_VBI_625	videodev2.h	1297;"	d
V4L2_SLICED_VPS	videodev2.h	1290;"	d
V4L2_SLICED_WSS_625	videodev2.h	1294;"	d
V4L2_STD_525_60	videodev2.h	740;"	d
V4L2_STD_625_50	videodev2.h	744;"	d
V4L2_STD_ALL	videodev2.h	752;"	d
V4L2_STD_ATSC	videodev2.h	748;"	d
V4L2_STD_ATSC_16_VSB	videodev2.h	699;"	d
V4L2_STD_ATSC_8_VSB	videodev2.h	698;"	d
V4L2_STD_B	videodev2.h	712;"	d
V4L2_STD_DK	videodev2.h	714;"	d
V4L2_STD_GH	videodev2.h	713;"	d
V4L2_STD_MN	videodev2.h	711;"	d
V4L2_STD_NTSC	videodev2.h	727;"	d
V4L2_STD_NTSC_443	videodev2.h	685;"	d
V4L2_STD_NTSC_M	videodev2.h	683;"	d
V4L2_STD_NTSC_M_JP	videodev2.h	684;"	d
V4L2_STD_NTSC_M_KR	videodev2.h	686;"	d
V4L2_STD_PAL	videodev2.h	723;"	d
V4L2_STD_PAL_60	videodev2.h	681;"	d
V4L2_STD_PAL_B	videodev2.h	669;"	d
V4L2_STD_PAL_B1	videodev2.h	670;"	d
V4L2_STD_PAL_BG	videodev2.h	717;"	d
V4L2_STD_PAL_D	videodev2.h	674;"	d
V4L2_STD_PAL_D1	videodev2.h	675;"	d
V4L2_STD_PAL_DK	videodev2.h	720;"	d
V4L2_STD_PAL_G	videodev2.h	671;"	d
V4L2_STD_PAL_H	videodev2.h	672;"	d
V4L2_STD_PAL_I	videodev2.h	673;"	d
V4L2_STD_PAL_K	videodev2.h	676;"	d
V4L2_STD_PAL_M	videodev2.h	678;"	d
V4L2_STD_PAL_N	videodev2.h	679;"	d
V4L2_STD_PAL_Nc	videodev2.h	680;"	d
V4L2_STD_SECAM	videodev2.h	733;"	d
V4L2_STD_SECAM_B	videodev2.h	688;"	d
V4L2_STD_SECAM_D	videodev2.h	689;"	d
V4L2_STD_SECAM_DK	videodev2.h	730;"	d
V4L2_STD_SECAM_G	videodev2.h	690;"	d
V4L2_STD_SECAM_H	videodev2.h	691;"	d
V4L2_STD_SECAM_K	videodev2.h	692;"	d
V4L2_STD_SECAM_K1	videodev2.h	693;"	d
V4L2_STD_SECAM_L	videodev2.h	694;"	d
V4L2_STD_SECAM_LC	videodev2.h	695;"	d
V4L2_STD_UNKNOWN	videodev2.h	751;"	d
V4L2_TC_FLAG_COLORFRAME	videodev2.h	415;"	d
V4L2_TC_FLAG_DROPFRAME	videodev2.h	414;"	d
V4L2_TC_TYPE_24FPS	videodev2.h	407;"	d
V4L2_TC_TYPE_25FPS	videodev2.h	408;"	d
V4L2_TC_TYPE_30FPS	videodev2.h	409;"	d
V4L2_TC_TYPE_50FPS	videodev2.h	410;"	d
V4L2_TC_TYPE_60FPS	videodev2.h	411;"	d
V4L2_TC_USERBITS_8BITCHARS	videodev2.h	418;"	d
V4L2_TC_USERBITS_USERDEFINED	videodev2.h	417;"	d
V4L2_TC_USERBITS_field	videodev2.h	416;"	d
V4L2_TUNER_ANALOG_TV	videodev2.h	/^	V4L2_TUNER_ANALOG_TV	     = 2,$/;"	e	enum:v4l2_tuner_type
V4L2_TUNER_CAP_LANG1	videodev2.h	1142;"	d
V4L2_TUNER_CAP_LANG2	videodev2.h	1140;"	d
V4L2_TUNER_CAP_LOW	videodev2.h	1137;"	d
V4L2_TUNER_CAP_NORM	videodev2.h	1138;"	d
V4L2_TUNER_CAP_SAP	videodev2.h	1141;"	d
V4L2_TUNER_CAP_STEREO	videodev2.h	1139;"	d
V4L2_TUNER_DIGITAL_TV	videodev2.h	/^	V4L2_TUNER_DIGITAL_TV	     = 3,$/;"	e	enum:v4l2_tuner_type
V4L2_TUNER_MODE_LANG1	videodev2.h	1156;"	d
V4L2_TUNER_MODE_LANG1_LANG2	videodev2.h	1157;"	d
V4L2_TUNER_MODE_LANG2	videodev2.h	1154;"	d
V4L2_TUNER_MODE_MONO	videodev2.h	1152;"	d
V4L2_TUNER_MODE_SAP	videodev2.h	1155;"	d
V4L2_TUNER_MODE_STEREO	videodev2.h	1153;"	d
V4L2_TUNER_RADIO	videodev2.h	/^	V4L2_TUNER_RADIO	     = 1,$/;"	e	enum:v4l2_tuner_type
V4L2_TUNER_SUB_LANG1	videodev2.h	1149;"	d
V4L2_TUNER_SUB_LANG2	videodev2.h	1147;"	d
V4L2_TUNER_SUB_MONO	videodev2.h	1145;"	d
V4L2_TUNER_SUB_SAP	videodev2.h	1148;"	d
V4L2_TUNER_SUB_STEREO	videodev2.h	1146;"	d
V4L2_VBI_INTERLACED	videodev2.h	1265;"	d
V4L2_VBI_UNSYNC	videodev2.h	1264;"	d
VIDEOBUF_COUNT	cam_values.h	6;"	d
VIDEO_MAX_FRAME	videodev2.h	70;"	d
VIDEO_PALETTE_RGGB10	pxa_camera_zl.h	139;"	d
VIDEO_PALETTE_RGGB8	pxa_camera_zl.h	138;"	d
VIDEO_START	pxa_camera_zl.h	108;"	d
VIDEO_STOP	pxa_camera_zl.h	109;"	d
VIDIOC_CROPCAP	videodev2.h	1419;"	d
VIDIOC_CROPCAP_OLD	videodev2.h	1454;"	d
VIDIOC_DBG_G_REGISTER	videodev2.h	1444;"	d
VIDIOC_DBG_S_REGISTER	videodev2.h	1443;"	d
VIDIOC_DQBUF	videodev2.h	1391;"	d
VIDIOC_ENCODER_CMD	videodev2.h	1439;"	d
VIDIOC_ENUMAUDIO	videodev2.h	1426;"	d
VIDIOC_ENUMAUDOUT	videodev2.h	1427;"	d
VIDIOC_ENUMINPUT	videodev2.h	1399;"	d
VIDIOC_ENUMOUTPUT	videodev2.h	1412;"	d
VIDIOC_ENUMSTD	videodev2.h	1398;"	d
VIDIOC_ENUM_FMT	videodev2.h	1378;"	d
VIDIOC_ENUM_FRAMEINTERVALS	videodev2.h	1437;"	d
VIDIOC_ENUM_FRAMESIZES	videodev2.h	1436;"	d
VIDIOC_G_AUDIO	videodev2.h	1404;"	d
VIDIOC_G_AUDIO_OLD	videodev2.h	1452;"	d
VIDIOC_G_AUDOUT	videodev2.h	1413;"	d
VIDIOC_G_AUDOUT_OLD	videodev2.h	1453;"	d
VIDIOC_G_CROP	videodev2.h	1420;"	d
VIDIOC_G_CTRL	videodev2.h	1400;"	d
VIDIOC_G_ENC_INDEX	videodev2.h	1438;"	d
VIDIOC_G_EXT_CTRLS	videodev2.h	1432;"	d
VIDIOC_G_FBUF	videodev2.h	1387;"	d
VIDIOC_G_FMT	videodev2.h	1379;"	d
VIDIOC_G_FREQUENCY	videodev2.h	1417;"	d
VIDIOC_G_INPUT	videodev2.h	1408;"	d
VIDIOC_G_JPEGCOMP	videodev2.h	1422;"	d
VIDIOC_G_MODULATOR	videodev2.h	1415;"	d
VIDIOC_G_MPEGCOMP	videodev2.h	1382;"	d
VIDIOC_G_OUTPUT	videodev2.h	1410;"	d
VIDIOC_G_PARM	videodev2.h	1394;"	d
VIDIOC_G_PRIORITY	videodev2.h	1428;"	d
VIDIOC_G_SLICED_VBI_CAP	videodev2.h	1430;"	d
VIDIOC_G_STD	videodev2.h	1396;"	d
VIDIOC_G_TUNER	videodev2.h	1402;"	d
VIDIOC_LOG_STATUS	videodev2.h	1431;"	d
VIDIOC_OVERLAY	videodev2.h	1389;"	d
VIDIOC_OVERLAY_OLD	videodev2.h	1449;"	d
VIDIOC_QBUF	videodev2.h	1390;"	d
VIDIOC_QUERYBUF	videodev2.h	1386;"	d
VIDIOC_QUERYCAP	videodev2.h	1376;"	d
VIDIOC_QUERYCTRL	videodev2.h	1406;"	d
VIDIOC_QUERYMENU	videodev2.h	1407;"	d
VIDIOC_QUERYSTD	videodev2.h	1424;"	d
VIDIOC_REQBUFS	videodev2.h	1385;"	d
VIDIOC_RESERVED	videodev2.h	1377;"	d
VIDIOC_STREAMOFF	videodev2.h	1393;"	d
VIDIOC_STREAMON	videodev2.h	1392;"	d
VIDIOC_S_AUDIO	videodev2.h	1405;"	d
VIDIOC_S_AUDOUT	videodev2.h	1414;"	d
VIDIOC_S_CROP	videodev2.h	1421;"	d
VIDIOC_S_CTRL	videodev2.h	1401;"	d
VIDIOC_S_CTRL_OLD	videodev2.h	1451;"	d
VIDIOC_S_EXT_CTRLS	videodev2.h	1433;"	d
VIDIOC_S_FBUF	videodev2.h	1388;"	d
VIDIOC_S_FMT	videodev2.h	1380;"	d
VIDIOC_S_FREQUENCY	videodev2.h	1418;"	d
VIDIOC_S_INPUT	videodev2.h	1409;"	d
VIDIOC_S_JPEGCOMP	videodev2.h	1423;"	d
VIDIOC_S_MODULATOR	videodev2.h	1416;"	d
VIDIOC_S_MPEGCOMP	videodev2.h	1383;"	d
VIDIOC_S_OUTPUT	videodev2.h	1411;"	d
VIDIOC_S_PARM	videodev2.h	1395;"	d
VIDIOC_S_PARM_OLD	videodev2.h	1450;"	d
VIDIOC_S_PRIORITY	videodev2.h	1429;"	d
VIDIOC_S_STD	videodev2.h	1397;"	d
VIDIOC_S_TUNER	videodev2.h	1403;"	d
VIDIOC_TRY_ENCODER_CMD	videodev2.h	1440;"	d
VIDIOC_TRY_EXT_CTRLS	videodev2.h	1434;"	d
VIDIOC_TRY_FMT	videodev2.h	1425;"	d
VID_TYPE_CAPTURE	videodev2.h	72;"	d
VID_TYPE_CHROMAKEY	videodev2.h	76;"	d
VID_TYPE_CLIPPING	videodev2.h	77;"	d
VID_TYPE_FRAMERAM	videodev2.h	78;"	d
VID_TYPE_MJPEG_DECODER	videodev2.h	84;"	d
VID_TYPE_MJPEG_ENCODER	videodev2.h	85;"	d
VID_TYPE_MONOCHROME	videodev2.h	80;"	d
VID_TYPE_MPEG_DECODER	videodev2.h	82;"	d
VID_TYPE_MPEG_ENCODER	videodev2.h	83;"	d
VID_TYPE_OVERLAY	videodev2.h	75;"	d
VID_TYPE_SCALES	videodev2.h	79;"	d
VID_TYPE_SUBCAPTURE	videodev2.h	81;"	d
VID_TYPE_TELETEXT	videodev2.h	74;"	d
VID_TYPE_TUNER	videodev2.h	73;"	d
WCAM_VIDIOCGCAMREG	pxa_camera_zl.h	64;"	d
WCAM_VIDIOCGCIREG	pxa_camera_zl.h	66;"	d
WCAM_VIDIOCGHST	pxa_camera_zl.h	50;"	d
WCAM_VIDIOCGINFOR	pxa_camera_zl.h	68;"	d
WCAM_VIDIOCSCAMREG	pxa_camera_zl.h	63;"	d
WCAM_VIDIOCSCIREG	pxa_camera_zl.h	65;"	d
WCAM_VIDIOCSINFOR	pxa_camera_zl.h	67;"	d
Y	cam_values.h	61;"	d
YUV422_BPP	pxa_camera_zl.h	99;"	d
_PXA3XX_MEDIA_LIB_HEADER_	pxa_lib.h	16;"	d
__CAMERA_H__	miso_camera.h	2;"	d
__CAM_VALUES_H__	cam_values.h	2;"	d
__CAR_LIB_H__	car_lib.h	2;"	d
__KEY_HANDLER_H__	key_handler.h	4;"	d
__LINUX_PXA_CAMERA_H_	pxa_camera_zl.h	22;"	d
__LINUX_VIDEODEV2_H	videodev2.h	57;"	d
__MISO_CAR_LIB_H__	miso_car_lib.h	2;"	d
__MISO_VALUES_H__	miso_values.h	3;"	d
__SENSOR_HANDLER_H__	sensor_handler.h	2;"	d
__XSCALE_SOURCE_DEBUG_HEADER__	pxa_dbg.h	18;"	d
__user	videodev2.h	62;"	d
a2dm_left	miso_values.h	/^static int a2dm_left[45]={$/;"	v
a2dm_right	miso_values.h	/^static int a2dm_right[45]={$/;"	v
accel	car_lib.h	/^char accel(char* acc)$/;"	f
act	miso_camera.h	/^struct sigaction act;$/;"	v	typeref:struct:sigaction
add_states	state_manage.h	/^void add_states(struct img_data* idata)$/;"	f
afc	videodev2.h	/^	__s32			afc;$/;"	m	struct:v4l2_tuner
angle	miso_values.h	/^	int angle;	$/;"	m	struct:image_data
au_bitrate	videodev2.h	/^	struct v4l2_bitrate		au_bitrate;$/;"	m	struct:v4l2_mpeg_compression	typeref:struct:v4l2_mpeg_compression::v4l2_bitrate
au_pesid	videodev2.h	/^	__u8                            au_pesid;$/;"	m	struct:v4l2_mpeg_compression
au_sample_rate	videodev2.h	/^	__u32				au_sample_rate;$/;"	m	struct:v4l2_mpeg_compression
au_type	videodev2.h	/^	enum v4l2_mpeg_audiotype	au_type;$/;"	m	struct:v4l2_mpeg_compression	typeref:enum:v4l2_mpeg_compression::v4l2_mpeg_audiotype
audioset	videodev2.h	/^	__u32	     audioset;		\/*  Associated audios (bitfield) *\/$/;"	m	struct:v4l2_input
audioset	videodev2.h	/^	__u32	     audioset;		\/*  Associated audios (bitfield) *\/$/;"	m	struct:v4l2_output
audmode	videodev2.h	/^	__u32			audmode;$/;"	m	struct:v4l2_tuner
backward_dis	car_lib.h	/^void backward_dis(int x)$/;"	f
backward_step	car_lib.h	/^void backward_step(int x)$/;"	f
base	videodev2.h	/^	void*                   base;$/;"	m	struct:v4l2_framebuffer
before	state_manage.h	/^	struct state_node *before, *next;$/;"	m	struct:state_node	typeref:struct:state_node::state_node
bitmap	videodev2.h	/^	void			__user *bitmap;$/;"	m	struct:v4l2_window
bounds	videodev2.h	/^	struct v4l2_rect        bounds;$/;"	m	struct:v4l2_cropcap	typeref:struct:v4l2_cropcap::v4l2_rect
break_light	car_lib.h	/^void break_light(char* status)$/;"	f
buf	car_lib.h	/^unsigned char buf[3];$/;"	v
buf	pxa_lib.h	/^			unsigned short *buf;$/;"	m	struct:pxa_video_buf::__anon3::__anon4
bus_info	videodev2.h	/^	__u8	bus_info[32];	\/* "PCI:" + pci_name(pci_dev) *\/$/;"	m	struct:v4l2_capability
busy_check	car_lib.h	/^char busy_check(void)$/;"	f
buzzer_off	car_lib.h	/^void buzzer_off(void)$/;"	f
buzzer_on	car_lib.h	/^void buzzer_on(void)$/;"	f
buzzer_time	car_lib.h	/^char buzzer_time(char* time)$/;"	f
bytesperline	videodev2.h	/^	__u32            	bytesperline;	\/* for padding, zero if unused *\/$/;"	m	struct:v4l2_pix_format
bytesused	videodev2.h	/^	__u32			bytesused;$/;"	m	struct:v4l2_buffer
c	videodev2.h	/^	struct v4l2_rect        c;$/;"	m	struct:v4l2_clip	typeref:struct:v4l2_clip::v4l2_rect
c	videodev2.h	/^	struct v4l2_rect        c;$/;"	m	struct:v4l2_crop	typeref:struct:v4l2_crop::v4l2_rect
camera_off	car_lib.h	/^void camera_off(void)$/;"	f
camera_on	car_lib.h	/^void camera_on(void)$/;"	f
camera_straight	miso_car_lib.h	/^void camera_straight()$/;"	f
camera_turn_left	miso_car_lib.h	/^void camera_turn_left()$/;"	f
camera_turn_right	miso_car_lib.h	/^void camera_turn_right()$/;"	f
camset	miso_camera.h	/^struct pxacam_setting camset;$/;"	v	typeref:struct:pxacam_setting
capabilities	videodev2.h	/^	__u32	capabilities;	\/* Device capabilities *\/$/;"	m	struct:v4l2_capability
capability	videodev2.h	/^	__u32			capability;$/;"	m	struct:v4l2_framebuffer
capability	videodev2.h	/^	__u32			capability;$/;"	m	struct:v4l2_modulator
capability	videodev2.h	/^	__u32			capability;$/;"	m	struct:v4l2_tuner
capability	videodev2.h	/^	__u32		   capability;	  \/*  Supported modes *\/$/;"	m	struct:v4l2_captureparm
capability	videodev2.h	/^	__u32		   capability;	 \/*  Supported modes *\/$/;"	m	struct:v4l2_outputparm
capability	videodev2.h	/^	__u32	capability;$/;"	m	struct:v4l2_audio
capability	videodev2.h	/^	__u32	capability;$/;"	m	struct:v4l2_audioout
capture	car_lib.h	/^void capture(void)$/;"	f
capture	videodev2.h	/^		struct v4l2_captureparm	capture;$/;"	m	union:v4l2_streamparm::__anon13	typeref:struct:v4l2_streamparm::__anon13::v4l2_captureparm
capture_view	car_lib.h	/^void capture_view(char* cap)$/;"	f
capturemode	videodev2.h	/^	__u32		   capturemode;	  \/*  Current mode *\/$/;"	m	struct:v4l2_captureparm
car_connect	car_lib.h	/^int car_connect(void)$/;"	f
car_state	state_manage.h	/^struct car_state$/;"	s
card	videodev2.h	/^	__u8	card[32];	\/* i.e. "Hauppauge WinTV" *\/$/;"	m	struct:v4l2_capability
cb	pxa_lib.h	/^			unsigned char *y,*cb,*cr;$/;"	m	struct:pxa_video_buf::__anon3::__anon5
cbstep	pxa_lib.h	/^			unsigned int ystep,cbstep,crstep;$/;"	m	struct:pxa_video_buf::__anon3::__anon5
change_line	miso_car_lib.h	/^void change_line(int v)$/;"	f
check_distance	car_lib.h	/^char check_distance(int ch)$/;"	f
check_mid_line	miso_camera.h	/^int check_mid_line(int mid_line,int under_line)$/;"	f
check_speed_bump_inline	miso_camera.h	/^int check_speed_bump_inline(int w, int y)$/;"	f
check_traffic_light	miso_camera.h	/^int check_traffic_light()$/;"	f
chromakey	videodev2.h	/^	__u32			chromakey;$/;"	m	struct:v4l2_window
clipcount	videodev2.h	/^	__u32			clipcount;$/;"	m	struct:v4l2_window
clips	videodev2.h	/^	struct v4l2_clip	__user *clips;$/;"	m	struct:v4l2_window	typeref:struct:v4l2_window::__user
closed_gops	videodev2.h	/^	__u32                           closed_gops:1;$/;"	m	struct:v4l2_mpeg_compression
cm_angle	car_lib.h	/^char cm_angle(char* angle1, char* angle2)$/;"	f
cm_handle	cam_values.h	/^static int cm_handle;$/;"	v
cm_speed	car_lib.h	/^char cm_speed(char* speed1)$/;"	f
cmd	car_lib.h	/^char cmd[100];$/;"	v
cmd	videodev2.h	/^	__u32 cmd;$/;"	m	struct:v4l2_encoder_cmd
color	pxa_camera_zl.h	/^	hst_color_type color;$/;"	m	struct:hst_context_s
colorspace	videodev2.h	/^	enum v4l2_colorspace	colorspace;$/;"	m	struct:v4l2_pix_format	typeref:enum:v4l2_pix_format::v4l2_colorspace
complete	car_lib.h	/^char complete(void)$/;"	f
control_led	car_lib.h	/^void control_led(int mode, char* value)$/;"	f
controls	videodev2.h	/^	struct v4l2_ext_control *controls;$/;"	m	struct:v4l2_ext_controls	typeref:struct:v4l2_ext_controls::v4l2_ext_control
count	videodev2.h	/^	__u32			count;$/;"	m	struct:v4l2_requestbuffers
count	videodev2.h	/^	__u32	count[2];$/;"	m	struct:v4l2_vbi_format
count	videodev2.h	/^	__u32 count;$/;"	m	struct:v4l2_ext_controls
cr	pxa_lib.h	/^			unsigned char *y,*cb,*cr;$/;"	m	struct:pxa_video_buf::__anon3::__anon5
crstep	pxa_lib.h	/^			unsigned int ystep,cbstep,crstep;$/;"	m	struct:pxa_video_buf::__anon3::__anon5
ctrl_class	videodev2.h	/^	__u32 ctrl_class;$/;"	m	struct:v4l2_ext_controls
data	videodev2.h	/^			__u32 data[8];$/;"	m	struct:v4l2_encoder_cmd::__anon10::__anon11
data	videodev2.h	/^	__u8    data[48];$/;"	m	struct:v4l2_sliced_vbi_data
default_value	videodev2.h	/^	__s32		     default_value;$/;"	m	struct:v4l2_queryctrl
defrect	videodev2.h	/^	struct v4l2_rect        defrect;$/;"	m	struct:v4l2_cropcap	typeref:struct:v4l2_cropcap::v4l2_rect
denominator	videodev2.h	/^	__u32   denominator;$/;"	m	struct:v4l2_fract
description	videodev2.h	/^	__u8		    description[32];   \/* Description string *\/$/;"	m	struct:v4l2_fmtdesc
dim	gaussian_filter.h	/^int dim = (((int)MAX(3.0, 2*4*SIGMA+1.0)%2==0)? ((int)MAX(3.0, 2*4*SIGMA+1.0)+1):((int)MAX(3.0, 2*4*SIGMA+1.0)));$/;"	v
dim2	gaussian_filter.h	/^int dim2 = (int)(MAX(3.0, 2*4*SIGMA+1.0)\/2);$/;"	v
dir_count	miso_camera.h	/^int dir_count = 0;$/;"	v
direct	miso_camera.h	/^int direct = NONE;$/;"	v
discrete	videodev2.h	/^		struct v4l2_fract		discrete;$/;"	m	union:v4l2_frmivalenum::__anon7	typeref:struct:v4l2_frmivalenum::__anon7::v4l2_fract
discrete	videodev2.h	/^		struct v4l2_frmsize_discrete	discrete;$/;"	m	union:v4l2_frmsizeenum::__anon6	typeref:struct:v4l2_frmsizeenum::__anon6::v4l2_frmsize_discrete
disp_inv_down	car_lib.h	/^void disp_inv_down(void)$/;"	f
disp_inv_up	car_lib.h	/^void disp_inv_up(void)$/;"	f
dist	miso_values.h	/^	int dist;$/;"	m	struct:image_data
distance	car_lib.h	/^char distance(char* dis1, char* dis2)$/;"	f
distance_check	distance_check.h	/^void* distance_check(void* data)$/;"	f
distance_reset	car_lib.h	/^void distance_reset(void)$/;"	f
distance_set	miso_car_lib.h	/^void distance_set(int dis)$/;"	f
dm_angle	car_lib.h	/^char dm_angle(char* angle1, char* angle2)$/;"	f
dm_speed	car_lib.h	/^char dm_speed(char* speed)$/;"	f
driver	videodev2.h	/^	__u8	driver[16];	\/* i.e. "bttv" *\/$/;"	m	struct:v4l2_capability
entries	videodev2.h	/^	__u32 entries;$/;"	m	struct:v4l2_enc_idx
entries_cap	videodev2.h	/^	__u32 entries_cap;$/;"	m	struct:v4l2_enc_idx
entry	videodev2.h	/^	struct v4l2_enc_idx_entry entry[V4L2_ENC_IDX_ENTRIES];$/;"	m	struct:v4l2_enc_idx	typeref:struct:v4l2_enc_idx::v4l2_enc_idx_entry
error_idx	videodev2.h	/^	__u32 error_idx;$/;"	m	struct:v4l2_ext_controls
exit_camera	miso_camera.h	/^int exit_camera(int handle){$/;"	f
extendedmode	videodev2.h	/^	__u32		   extendedmode;  \/*  Driver-specific extensions *\/$/;"	m	struct:v4l2_captureparm
extendedmode	videodev2.h	/^	__u32		   extendedmode; \/*  Driver-specific extensions *\/$/;"	m	struct:v4l2_outputparm
fd	cam_values.h	/^static int fd;$/;"	v
field	videodev2.h	/^	__u32   field;          \/* 0: first field, 1: second field *\/$/;"	m	struct:v4l2_sliced_vbi_data
field	videodev2.h	/^	enum v4l2_field		field;$/;"	m	struct:v4l2_buffer	typeref:enum:v4l2_buffer::v4l2_field
field	videodev2.h	/^	enum v4l2_field  	field;$/;"	m	struct:v4l2_pix_format	typeref:enum:v4l2_pix_format::v4l2_field
field	videodev2.h	/^	enum v4l2_field  	field;$/;"	m	struct:v4l2_window	typeref:enum:v4l2_window::v4l2_field
find_in_point	miso_camera.h	/^int find_in_point(int rl_info, int i, int offset)$/;"	f
find_inline	miso_camera.h	/^int find_inline(int rl_info, int y, int w)$/;"	f
find_left	cam_values.h	/^int find_left = FL_NONE, find_right = FL_NONE;$/;"	v
find_out_end_point	miso_camera.h	/^int find_out_end_point(int i, int offset)$/;"	f
find_outline	miso_camera.h	/^int find_outline(int y, int w)$/;"	f
find_right	cam_values.h	/^int find_left = FL_NONE, find_right = FL_NONE;$/;"	v
flags	videodev2.h	/^	__u32			flags;$/;"	m	struct:v4l2_buffer
flags	videodev2.h	/^	__u32			flags;$/;"	m	struct:v4l2_framebuffer
flags	videodev2.h	/^	__u32	flags;			\/* V4L2_VBI_* *\/$/;"	m	struct:v4l2_vbi_format
flags	videodev2.h	/^	__u32	flags;$/;"	m	struct:v4l2_timecode
flags	videodev2.h	/^	__u32                flags;$/;"	m	struct:v4l2_queryctrl
flags	videodev2.h	/^	__u32               flags;$/;"	m	struct:v4l2_fmtdesc
flags	videodev2.h	/^	__u32 flags;$/;"	m	struct:v4l2_enc_idx_entry
flags	videodev2.h	/^	__u32 flags;$/;"	m	struct:v4l2_encoder_cmd
fmt	videodev2.h	/^	struct v4l2_pix_format	fmt;$/;"	m	struct:v4l2_framebuffer	typeref:struct:v4l2_framebuffer::v4l2_pix_format
fmt	videodev2.h	/^	} fmt;$/;"	m	struct:v4l2_format	typeref:union:v4l2_format::__anon12
fog_light	car_lib.h	/^void fog_light(char* status)$/;"	f
format	miso_camera.h	/^	enum    pxavid_format format;$/;"	m	struct:pxa_camera	typeref:enum:pxa_camera::pxavid_format
format	pxa_lib.h	/^	enum	pxavid_format format;$/;"	m	struct:pxacam_setting	typeref:enum:pxacam_setting::pxavid_format
format	pxa_lib.h	/^	enum pxavid_format format;$/;"	m	struct:pxa_video_buf	typeref:enum:pxa_video_buf::pxavid_format
forward_dis	car_lib.h	/^void forward_dis(void)$/;"	f
forward_step	car_lib.h	/^void forward_step(void)$/;"	f
framelines	videodev2.h	/^	__u32		     framelines;$/;"	m	struct:v4l2_standard
frameperiod	videodev2.h	/^	struct v4l2_fract    frameperiod; \/* Frames, not fields *\/$/;"	m	struct:v4l2_standard	typeref:struct:v4l2_standard::v4l2_fract
frames	videodev2.h	/^	__u8	frames;$/;"	m	struct:v4l2_timecode
frequency	videodev2.h	/^	__u32		      frequency;$/;"	m	struct:v4l2_frequency
front_light	car_lib.h	/^void front_light(char* status)$/;"	f
g_angle	miso_car_lib.h	/^static int g_angle = DM_STRAIGHT;$/;"	v
g_drive_flag	miso_values.h	/^static int g_drive_flag = DF_STR;$/;"	v
g_image_flag	miso_values.h	/^static int g_image_flag = IF_DRIVE;$/;"	v
g_sleep	miso_car_lib.h	/^static char g_sleep = FALSE;$/;"	v
g_sp	miso_car_lib.h	/^static int g_sp = 0;$/;"	v
g_state_list	state_manage.h	/^}g_state_list;$/;"	v	typeref:struct:state_list
gaussian_filter	gaussian_filter.h	/^void gaussian_filter()$/;"	f
get_road_angle	miso_camera.h	/^int get_road_angle( struct p_point a, struct p_point b)$/;"	f
get_width_scan_point	miso_camera.h	/^int get_width_scan_point()$/;"	f
handle	miso_camera.h	/^	int handle;$/;"	m	struct:pxa_camera
head	state_manage.h	/^	struct state_node* head;$/;"	m	struct:state_list	typeref:struct:state_list::state_node
height	miso_camera.h	/^	int height;$/;"	m	struct:pxa_camera
height	pxa_lib.h	/^	int	height;$/;"	m	struct:pxacam_setting
height	pxa_lib.h	/^	int width,height;$/;"	m	struct:pxa_rect
height	pxa_lib.h	/^	int width,height;$/;"	m	struct:pxa_video_buf
height	videodev2.h	/^	__s32   height;$/;"	m	struct:v4l2_rect
height	videodev2.h	/^	__u32			height;		\/* Frame height *\/$/;"	m	struct:v4l2_frmivalenum
height	videodev2.h	/^	__u32			height;		\/* Frame height [pixel] *\/$/;"	m	struct:v4l2_frmsize_discrete
height	videodev2.h	/^	__u32			height;$/;"	m	struct:v4l2_pix_format
hours	videodev2.h	/^	__u8	hours;$/;"	m	struct:v4l2_timecode
hst	pxa_camera_zl.h	/^	unsigned short *hst;$/;"	m	struct:hst_context_s
hst_color_type	pxa_camera_zl.h	/^} hst_color_type;$/;"	t	typeref:enum:__anon1
hst_context_s	pxa_camera_zl.h	/^struct hst_context_s{$/;"	s
id	videodev2.h	/^	__u32		     id;$/;"	m	struct:v4l2_control
id	videodev2.h	/^	__u32		     id;$/;"	m	struct:v4l2_queryctrl
id	videodev2.h	/^	__u32		id;$/;"	m	struct:v4l2_querymenu
id	videodev2.h	/^	__u32   id;$/;"	m	struct:v4l2_sliced_vbi_data
id	videodev2.h	/^	__u32 id;$/;"	m	struct:v4l2_ext_control
id	videodev2.h	/^	v4l2_std_id          id;$/;"	m	struct:v4l2_standard
image_data	miso_values.h	/^struct image_data$/;"	s
img_buf_y	cam_values.h	/^int img_buf_y[MAXHEIGHT][MAXWIDTH];$/;"	v
index	videodev2.h	/^	__u32			index;		\/* Frame format index *\/$/;"	m	struct:v4l2_frmivalenum
index	videodev2.h	/^	__u32			index;		\/* Frame size number *\/$/;"	m	struct:v4l2_frmsizeenum
index	videodev2.h	/^	__u32			index;$/;"	m	struct:v4l2_buffer
index	videodev2.h	/^	__u32			index;$/;"	m	struct:v4l2_modulator
index	videodev2.h	/^	__u32		     index;$/;"	m	struct:v4l2_standard
index	videodev2.h	/^	__u32		    index;             \/* Format number      *\/$/;"	m	struct:v4l2_fmtdesc
index	videodev2.h	/^	__u32		index;$/;"	m	struct:v4l2_querymenu
index	videodev2.h	/^	__u32	     index;		\/*  Which input *\/$/;"	m	struct:v4l2_input
index	videodev2.h	/^	__u32	     index;		\/*  Which output *\/$/;"	m	struct:v4l2_output
index	videodev2.h	/^	__u32	index;$/;"	m	struct:v4l2_audio
index	videodev2.h	/^	__u32	index;$/;"	m	struct:v4l2_audioout
index	videodev2.h	/^	__u32                   index;$/;"	m	struct:v4l2_tuner
info_scan	car_lib.h	/^char info_scan(void)$/;"	f
info_write	car_lib.h	/^void info_write(char* id)$/;"	f
init_camera	miso_camera.h	/^int init_camera(){$/;"	f
init_point	miso_camera.h	/^void init_point()$/;"	f
init_values	miso_camera.h	/^void init_values(int handle)$/;"	f
input	videodev2.h	/^	__u32			input;$/;"	m	struct:v4l2_buffer
io_size	videodev2.h	/^	__u32   io_size;$/;"	m	struct:v4l2_sliced_vbi_format
is_left_turn	miso_camera.h	/^int is_left_turn(int x, int y)$/;"	f
jpeg_markers	videodev2.h	/^	__u32 jpeg_markers;     \/* Which markers should go into the JPEG$/;"	m	struct:v4l2_jpegcompression
keyDev	key_handler.h	/^static char keyDev[] ="\/dev\/KEYPAD";$/;"	v
keyFD	key_handler.h	/^static int keyFD = -1;$/;"	v
keyState	key_handler.h	/^static char keyState[3]={OFF,OFF,OFF};$/;"	v
key_handler	key_handler.h	/^void* key_handler(void* data)$/;"	f
lcd_disp_num	car_lib.h	/^void lcd_disp_num(int num)$/;"	f
lcd_disp_pic	car_lib.h	/^void lcd_disp_pic(char* pic)$/;"	f
left	videodev2.h	/^	__s32   left;$/;"	m	struct:v4l2_rect
left_angle	angle_table.h	/^int left_angle[18][30] ={$/;"	v
left_line_check	miso_camera.h	/^int left_line_check(int i)$/;"	f
len	pxa_lib.h	/^			unsigned int len;$/;"	m	struct:pxa_video_buf::__anon3::__anon4
length	videodev2.h	/^	__u32			length;$/;"	m	struct:v4l2_buffer
length	videodev2.h	/^	__u32 length;$/;"	m	struct:v4l2_enc_idx_entry
limit	gaussian_filter.h	/^unsigned char limit(double a)$/;"	f
line	videodev2.h	/^	__u32   line;           \/* 1-23 *\/$/;"	m	struct:v4l2_sliced_vbi_data
line_check	miso_camera.h	/^struct image_data* line_check(int handle)$/;"	f
line_start	car_lib.h	/^void line_start(void)$/;"	f
line_stop	car_lib.h	/^void line_stop(void)$/;"	f
lm_break	car_lib.h	/^char lm_break(char* brea)$/;"	f
lm_speed	car_lib.h	/^char lm_speed(char* speed1, char* speed2)$/;"	f
lm_step	car_lib.h	/^char lm_step(char* step1, char* step2)$/;"	f
load_car_state_	state_manage.h	/^struct car_state** load_car_state_() \/\/ 배열 동적 할당. $/;"	f
m	videodev2.h	/^	} m;$/;"	m	struct:v4l2_buffer	typeref:union:v4l2_buffer::__anon8
match_chip	videodev2.h	/^	__u32 match_chip; \/* Match this chip, meaning determined by match_type *\/$/;"	m	struct:v4l2_register
match_type	videodev2.h	/^	__u32 match_type; \/* Match type *\/$/;"	m	struct:v4l2_register
max	videodev2.h	/^	__u32			max;$/;"	m	struct:v4l2_bitrate
max	videodev2.h	/^	struct v4l2_fract	max;		\/* Maximum frame interval [s] *\/$/;"	m	struct:v4l2_frmival_stepwise	typeref:struct:v4l2_frmival_stepwise::v4l2_fract
max_height	videodev2.h	/^	__u32			max_height;	\/* Maximum frame height [pixel] *\/$/;"	m	struct:v4l2_frmsize_stepwise
max_width	videodev2.h	/^	__u32			max_width;	\/* Maximum frame width [pixel] *\/$/;"	m	struct:v4l2_frmsize_stepwise
maximum	videodev2.h	/^	__s32		     maximum;$/;"	m	struct:v4l2_queryctrl
memory	videodev2.h	/^	enum v4l2_memory        memory;$/;"	m	struct:v4l2_buffer	typeref:enum:v4l2_buffer::v4l2_memory
memory	videodev2.h	/^	enum v4l2_memory        memory;$/;"	m	struct:v4l2_requestbuffers	typeref:enum:v4l2_requestbuffers::v4l2_memory
min	videodev2.h	/^	__u32			min;$/;"	m	struct:v4l2_bitrate
min	videodev2.h	/^	struct v4l2_fract	min;		\/* Minimum frame interval [s] *\/$/;"	m	struct:v4l2_frmival_stepwise	typeref:struct:v4l2_frmival_stepwise::v4l2_fract
min_height	videodev2.h	/^	__u32			min_height;	\/* Minimum frame height [pixel] *\/$/;"	m	struct:v4l2_frmsize_stepwise
min_width	videodev2.h	/^	__u32			min_width;	\/* Minimum frame width [pixel] *\/$/;"	m	struct:v4l2_frmsize_stepwise
minimum	videodev2.h	/^	__s32		     minimum;	\/* Note signedness *\/$/;"	m	struct:v4l2_queryctrl
minutes	videodev2.h	/^	__u8	minutes;$/;"	m	struct:v4l2_timecode
mode	miso_camera.h	/^	int mode;$/;"	m	struct:pxa_camera
mode	pxa_lib.h	/^	int	mode;$/;"	m	struct:pxacam_setting
mode	videodev2.h	/^	__u32	mode;$/;"	m	struct:v4l2_audio
mode	videodev2.h	/^	__u32	mode;$/;"	m	struct:v4l2_audioout
mode	videodev2.h	/^	enum v4l2_bitrate_mode	mode;$/;"	m	struct:v4l2_bitrate	typeref:enum:v4l2_bitrate::v4l2_bitrate_mode
modulator	videodev2.h	/^	__u32	     modulator;         \/*  Associated modulator *\/$/;"	m	struct:v4l2_output
motor_hold	car_lib.h	/^void motor_hold(void)$/;"	f
motor_hold_cancel	car_lib.h	/^void motor_hold_cancel(void)$/;"	f
name	videodev2.h	/^	__u8			name[32];$/;"	m	struct:v4l2_modulator
name	videodev2.h	/^	__u8			name[32];$/;"	m	struct:v4l2_tuner
name	videodev2.h	/^	__u8		     name[24];$/;"	m	struct:v4l2_standard
name	videodev2.h	/^	__u8		     name[32];	\/* Whatever *\/$/;"	m	struct:v4l2_queryctrl
name	videodev2.h	/^	__u8		name[32];	\/* Whatever *\/$/;"	m	struct:v4l2_querymenu
name	videodev2.h	/^	__u8	     name[32];		\/*  Label *\/$/;"	m	struct:v4l2_input
name	videodev2.h	/^	__u8	     name[32];		\/*  Label *\/$/;"	m	struct:v4l2_output
name	videodev2.h	/^	__u8	name[32];$/;"	m	struct:v4l2_audio
name	videodev2.h	/^	__u8	name[32];$/;"	m	struct:v4l2_audioout
next	state_manage.h	/^	struct state_node *before, *next;$/;"	m	struct:state_node	typeref:struct:state_node::
next	videodev2.h	/^	struct v4l2_clip	__user *next;$/;"	m	struct:v4l2_clip	typeref:struct:v4l2_clip::__user
numerator	videodev2.h	/^	__u32   numerator;$/;"	m	struct:v4l2_fract
offset	videodev2.h	/^		__u32           offset;$/;"	m	union:v4l2_buffer::__anon8
offset	videodev2.h	/^	__u32	offset;$/;"	m	struct:v4l2_vbi_format
offset	videodev2.h	/^	__u64 offset;$/;"	m	struct:v4l2_enc_idx_entry
output	videodev2.h	/^		struct v4l2_outputparm	output;$/;"	m	union:v4l2_streamparm::__anon13	typeref:struct:v4l2_streamparm::__anon13::v4l2_outputparm
outputmode	videodev2.h	/^	__u32		   outputmode;	 \/*  Current mode *\/$/;"	m	struct:v4l2_outputparm
p_point	cam_values.h	/^struct p_point$/;"	s
parm	videodev2.h	/^	} parm;$/;"	m	struct:v4l2_streamparm	typeref:union:v4l2_streamparm::__anon13
pix	videodev2.h	/^		struct v4l2_pix_format		pix;     \/\/ V4L2_BUF_TYPE_VIDEO_CAPTURE$/;"	m	union:v4l2_format::__anon12	typeref:struct:v4l2_format::__anon12::v4l2_pix_format
pixel_format	videodev2.h	/^	__u32			pixel_format;	\/* Pixel format *\/$/;"	m	struct:v4l2_frmivalenum
pixel_format	videodev2.h	/^	__u32			pixel_format;	\/* Pixel format *\/$/;"	m	struct:v4l2_frmsizeenum
pixelaspect	videodev2.h	/^	struct v4l2_fract       pixelaspect;$/;"	m	struct:v4l2_cropcap	typeref:struct:v4l2_cropcap::v4l2_fract
pixelformat	videodev2.h	/^	__u32			pixelformat;$/;"	m	struct:v4l2_pix_format
pixelformat	videodev2.h	/^	__u32		    pixelformat;       \/* Format fourcc      *\/$/;"	m	struct:v4l2_fmtdesc
point	key_handler.h	/^int point;$/;"	v
print_screen_cb	miso_camera.h	/^void print_screen_cb()$/;"	f
print_screen_color	miso_camera.h	/^void print_screen_color()$/;"	f
print_screen_cr	miso_camera.h	/^void print_screen_cr()$/;"	f
print_screen_org	miso_camera.h	/^void print_screen_org()$/;"	f
print_screen_y	miso_camera.h	/^void print_screen_y()$/;"	f
priv	videodev2.h	/^	__u32			priv;		\/* private data, depends on pixelformat *\/$/;"	m	struct:v4l2_pix_format
ps_kill	car_lib.h	/^void ps_kill(char* kill)$/;"	f
ps_size	videodev2.h	/^	__u16				ps_size;$/;"	m	struct:v4l2_mpeg_compression
pt	cam_values.h	/^struct p_point pt[PT_SIZE]; \/\/ 잡힌 점 $/;"	v	typeref:struct:p_point
pts	videodev2.h	/^	__u64 pts;$/;"	m	struct:v4l2_enc_idx_entry
pulldown	videodev2.h	/^	__u32                           pulldown:1;$/;"	m	struct:v4l2_mpeg_compression
pxa_camera	miso_camera.h	/^struct pxa_camera$/;"	s
pxa_rect	pxa_lib.h	/^struct pxa_rect{$/;"	s
pxa_video_buf	pxa_lib.h	/^struct pxa_video_buf{$/;"	s
pxacam_setting	pxa_lib.h	/^struct pxacam_setting {$/;"	s
pxavid_format	pxa_lib.h	/^enum pxavid_format{$/;"	g
pxavid_invalid	pxa_lib.h	/^	pxavid_invalid = 0,$/;"	e	enum:pxavid_format
pxavid_rggb10	pxa_lib.h	/^	pxavid_rggb10,$/;"	e	enum:pxavid_format
pxavid_rggb8	pxa_lib.h	/^	pxavid_rggb8,$/;"	e	enum:pxavid_format
pxavid_ycbcr420	pxa_lib.h	/^	pxavid_ycbcr420,$/;"	e	enum:pxavid_format
pxavid_ycbcr422	pxa_lib.h	/^	pxavid_ycbcr422,$/;"	e	enum:pxavid_format
quality	videodev2.h	/^	int quality;$/;"	m	struct:v4l2_jpegcompression
rangehigh	videodev2.h	/^	__u32			rangehigh;$/;"	m	struct:v4l2_modulator
rangehigh	videodev2.h	/^	__u32			rangehigh;$/;"	m	struct:v4l2_tuner
rangelow	videodev2.h	/^	__u32			rangelow;$/;"	m	struct:v4l2_modulator
rangelow	videodev2.h	/^	__u32			rangelow;$/;"	m	struct:v4l2_tuner
raw	videodev2.h	/^		} raw;$/;"	m	union:v4l2_encoder_cmd::__anon10	typeref:struct:v4l2_encoder_cmd::__anon10::__anon11
raw_data	videodev2.h	/^		__u8	raw_data[200];                   \/\/ user-defined$/;"	m	union:v4l2_format::__anon12
raw_data	videodev2.h	/^		__u8	raw_data[200];  \/* user-defined *\/$/;"	m	union:v4l2_streamparm::__anon13
read_buf	car_lib.h	/^unsigned char read_buf[3];$/;"	v
read_sensor	car_lib.h	/^int read_sensor(void)$/;"	f
read_sensor_while	car_lib.h	/^char read_sensor_while(void)$/;"	f
read_speed	car_lib.h	/^char read_speed(void)$/;"	f
readbuffers	videodev2.h	/^	__u32              readbuffers;   \/*  # of buffers for read *\/$/;"	m	struct:v4l2_captureparm
rear_sensor_stop	car_lib.h	/^void rear_sensor_stop(void)$/;"	f
reduction	car_lib.h	/^char reduction(char* reduc)$/;"	f
ref_count	miso_camera.h	/^	int ref_count;$/;"	m	struct:pxa_camera
reg	videodev2.h	/^	__u64 reg;$/;"	m	struct:v4l2_register
reg_set_s	pxa_camera_zl.h	/^struct reg_set_s {$/;"	s
reserved	videodev2.h	/^		void *reserved;$/;"	m	union:v4l2_ext_control::__anon9
reserved	videodev2.h	/^	__u32			reserved;$/;"	m	struct:v4l2_buffer
reserved	videodev2.h	/^	__u32			reserved[2];$/;"	m	struct:v4l2_requestbuffers
reserved	videodev2.h	/^	__u32			reserved[4];$/;"	m	struct:v4l2_modulator
reserved	videodev2.h	/^	__u32			reserved[4];$/;"	m	struct:v4l2_tuner
reserved	videodev2.h	/^	__u32		      reserved[8];$/;"	m	struct:v4l2_frequency
reserved	videodev2.h	/^	__u32		     reserved[2];$/;"	m	struct:v4l2_queryctrl
reserved	videodev2.h	/^	__u32		     reserved[4];$/;"	m	struct:v4l2_standard
reserved	videodev2.h	/^	__u32		    reserved[4];$/;"	m	struct:v4l2_fmtdesc
reserved	videodev2.h	/^	__u32		   reserved[4];$/;"	m	struct:v4l2_captureparm
reserved	videodev2.h	/^	__u32		   reserved[4];$/;"	m	struct:v4l2_outputparm
reserved	videodev2.h	/^	__u32		reserved;$/;"	m	struct:v4l2_querymenu
reserved	videodev2.h	/^	__u32	     reserved[4];$/;"	m	struct:v4l2_input
reserved	videodev2.h	/^	__u32	     reserved[4];$/;"	m	struct:v4l2_output
reserved	videodev2.h	/^	__u32	reserved[2];			\/* Reserved space for future use *\/$/;"	m	struct:v4l2_frmivalenum
reserved	videodev2.h	/^	__u32	reserved[2];		\/* must be zero *\/$/;"	m	struct:v4l2_vbi_format
reserved	videodev2.h	/^	__u32	reserved[2];$/;"	m	struct:v4l2_audio
reserved	videodev2.h	/^	__u32	reserved[2];$/;"	m	struct:v4l2_audioout
reserved	videodev2.h	/^	__u32	reserved[4];$/;"	m	struct:v4l2_capability
reserved	videodev2.h	/^	__u32   reserved;       \/* must be 0 *\/$/;"	m	struct:v4l2_sliced_vbi_data
reserved	videodev2.h	/^	__u32   reserved[2];			\/* Reserved space for future use *\/$/;"	m	struct:v4l2_frmsizeenum
reserved	videodev2.h	/^	__u32   reserved[2];            \/* must be zero *\/$/;"	m	struct:v4l2_sliced_vbi_format
reserved	videodev2.h	/^	__u32   reserved[3];    \/* must be 0 *\/$/;"	m	struct:v4l2_sliced_vbi_cap
reserved	videodev2.h	/^	__u32 reserved[2];$/;"	m	struct:v4l2_enc_idx_entry
reserved	videodev2.h	/^	__u32 reserved[2];$/;"	m	struct:v4l2_ext_controls
reserved	videodev2.h	/^	__u32 reserved[4];$/;"	m	struct:v4l2_enc_idx
reserved2	videodev2.h	/^	__u32 reserved2[2];$/;"	m	struct:v4l2_ext_control
reserved_1	videodev2.h	/^	__u16				reserved_1;    \/* align *\/$/;"	m	struct:v4l2_mpeg_compression
reserved_2	videodev2.h	/^	__u8                            reserved_2[3]; \/* align *\/$/;"	m	struct:v4l2_mpeg_compression
reserved_3	videodev2.h	/^	__u8                            reserved_3[3]; \/* align *\/$/;"	m	struct:v4l2_mpeg_compression
reserved_4	videodev2.h	/^	__u32                           reserved_4:30; \/* align *\/$/;"	m	struct:v4l2_mpeg_compression
reserved_5	videodev2.h	/^	__u32				reserved_5[8];$/;"	m	struct:v4l2_mpeg_compression
rggb10	pxa_lib.h	/^		}rggb10;$/;"	m	union:pxa_video_buf::__anon3	typeref:struct:pxa_video_buf::__anon3::__anon4
right_angle	angle_table.h	/^int right_angle[18][30] = {$/;"	v
right_line_check	miso_camera.h	/^int right_line_check(int i)$/;"	f
rxbuf	car_lib.h	/^unsigned short rxbuf[4];$/;"	v
rxsubchans	videodev2.h	/^	__u32			rxsubchans;$/;"	m	struct:v4l2_tuner
sample_format	videodev2.h	/^	__u32	sample_format;		\/* V4L2_PIX_FMT_* *\/$/;"	m	struct:v4l2_vbi_format
samples_per_line	videodev2.h	/^	__u32	samples_per_line;$/;"	m	struct:v4l2_vbi_format
sampling_rate	videodev2.h	/^	__u32	sampling_rate;		\/* in 1 Hz *\/$/;"	m	struct:v4l2_vbi_format
save_car_state	state_manage.h	/^void save_car_state()$/;"	f
seconds	videodev2.h	/^	__u8	seconds;$/;"	m	struct:v4l2_timecode
sensor	miso_camera.h	/^	int sensor;$/;"	m	struct:pxa_camera
sensor_handler	sensor_handler.h	/^void* sensor_handler(void* data)$/;"	f
sequence	videodev2.h	/^	__u32			sequence;$/;"	m	struct:v4l2_buffer
service_lines	videodev2.h	/^	__u16   service_lines[2][24];$/;"	m	struct:v4l2_sliced_vbi_cap
service_lines	videodev2.h	/^	__u16   service_lines[2][24];$/;"	m	struct:v4l2_sliced_vbi_format
service_set	videodev2.h	/^	__u16   service_set;$/;"	m	struct:v4l2_sliced_vbi_cap
service_set	videodev2.h	/^	__u16   service_set;$/;"	m	struct:v4l2_sliced_vbi_format
set_angle	miso_car_lib.h	/^void set_angle(int angle,int dist)$/;"	f
set_end_point	miso_camera.h	/^int set_end_point(int rl_info, struct p_point* pt_tmp, int flag)$/;"	f
sighandler	miso_camera.h	/^void sighandler(int signo)$/;"	f
signal	videodev2.h	/^	__s32			signal;$/;"	m	struct:v4l2_tuner
size	pxa_camera_zl.h	/^	unsigned int size;$/;"	m	struct:hst_context_s
size	state_manage.h	/^	int size;$/;"	m	struct:state_list
sizeimage	videodev2.h	/^	__u32          		sizeimage;$/;"	m	struct:v4l2_pix_format
sliced	videodev2.h	/^		struct v4l2_sliced_vbi_format	sliced;  \/\/ V4L2_BUF_TYPE_SLICED_VBI_CAPTURE$/;"	m	union:v4l2_format::__anon12	typeref:struct:v4l2_format::__anon12::v4l2_sliced_vbi_format
sound_play	car_lib.h	/^void sound_play(char* sound)$/;"	f
speed_down	miso_car_lib.h	/^void speed_down(int v)$/;"	f
speed_set	miso_car_lib.h	/^void speed_set(int sp)$/;"	f
speed_up	miso_car_lib.h	/^void speed_up(int v)$/;"	f
st_bitrate	videodev2.h	/^	struct v4l2_bitrate		st_bitrate;$/;"	m	struct:v4l2_mpeg_compression	typeref:struct:v4l2_mpeg_compression::v4l2_bitrate
st_type	videodev2.h	/^	enum v4l2_mpeg_streamtype	st_type;$/;"	m	struct:v4l2_mpeg_compression	typeref:enum:v4l2_mpeg_compression::v4l2_mpeg_streamtype
start	videodev2.h	/^	__s32	start[2];$/;"	m	struct:v4l2_vbi_format
state	state_manage.h	/^	struct car_state state;$/;"	m	struct:state_node	typeref:struct:state_node::car_state
state_array	state_manage.h	/^}* state_array;$/;"	v	typeref:struct:car_state
state_list	state_manage.h	/^struct state_list$/;"	s
state_node	state_manage.h	/^struct state_node$/;"	s
status	miso_camera.h	/^	int status;$/;"	m	struct:pxa_camera
status	videodev2.h	/^	__u32	     status;$/;"	m	struct:v4l2_input
std	videodev2.h	/^	v4l2_std_id  std;$/;"	m	struct:v4l2_input
std	videodev2.h	/^	v4l2_std_id  std;$/;"	m	struct:v4l2_output
step	videodev2.h	/^	__s32		     step;$/;"	m	struct:v4l2_queryctrl
step	videodev2.h	/^	struct v4l2_fract	step;		\/* Frame interval step size [s] *\/$/;"	m	struct:v4l2_frmival_stepwise	typeref:struct:v4l2_frmival_stepwise::v4l2_fract
step_height	videodev2.h	/^	__u32			step_height;	\/* Frame height step size [pixel] *\/$/;"	m	struct:v4l2_frmsize_stepwise
step_width	videodev2.h	/^	__u32			step_width;	\/* Frame width step size [pixel] *\/$/;"	m	struct:v4l2_frmsize_stepwise
stepwise	videodev2.h	/^		struct v4l2_frmival_stepwise	stepwise;$/;"	m	union:v4l2_frmivalenum::__anon7	typeref:struct:v4l2_frmivalenum::__anon7::v4l2_frmival_stepwise
stepwise	videodev2.h	/^		struct v4l2_frmsize_stepwise	stepwise;$/;"	m	union:v4l2_frmsizeenum::__anon6	typeref:struct:v4l2_frmsizeenum::__anon6::v4l2_frmsize_stepwise
stop	car_lib.h	/^void stop(void)$/;"	f
sudden_stop	car_lib.h	/^char sudden_stop(char* sud)$/;"	f
sum	pxa_camera_zl.h	/^	unsigned int sum;$/;"	m	struct:hst_context_s
tail	state_manage.h	/^	struct state_node* tail;$/;"	m	struct:state_list	typeref:struct:state_list::state_node
target	videodev2.h	/^	__u32			target;  \/* use this one for CBR *\/$/;"	m	struct:v4l2_bitrate
timecode	videodev2.h	/^	struct v4l2_timecode	timecode;$/;"	m	struct:v4l2_buffer	typeref:struct:v4l2_buffer::v4l2_timecode
timeperframe	videodev2.h	/^	struct v4l2_fract  timeperframe;  \/*  Time per frame in .1us units *\/$/;"	m	struct:v4l2_captureparm	typeref:struct:v4l2_captureparm::v4l2_fract
timeperframe	videodev2.h	/^	struct v4l2_fract  timeperframe; \/*  Time per frame in seconds *\/$/;"	m	struct:v4l2_outputparm	typeref:struct:v4l2_outputparm::v4l2_fract
timestamp	videodev2.h	/^	struct timeval		timestamp;$/;"	m	struct:v4l2_buffer	typeref:struct:v4l2_buffer::timeval
top	videodev2.h	/^	__s32   top;$/;"	m	struct:v4l2_rect
total_distance	car_lib.h	/^char total_distance(void)$/;"	f
ts_pid_audio	videodev2.h	/^	__u16				ts_pid_audio;$/;"	m	struct:v4l2_mpeg_compression
ts_pid_pcr	videodev2.h	/^	__u16				ts_pid_pcr;$/;"	m	struct:v4l2_mpeg_compression
ts_pid_pmt	videodev2.h	/^	__u16				ts_pid_pmt;$/;"	m	struct:v4l2_mpeg_compression
ts_pid_video	videodev2.h	/^	__u16				ts_pid_video;$/;"	m	struct:v4l2_mpeg_compression
tuner	videodev2.h	/^	__u32		      tuner;$/;"	m	struct:v4l2_frequency
tuner	videodev2.h	/^	__u32        tuner;             \/*  Associated tuner *\/$/;"	m	struct:v4l2_input
turn_left	miso_car_lib.h	/^void turn_left(int v,int dist)$/;"	f
turn_right	miso_car_lib.h	/^void turn_right(int v,int dist)$/;"	f
turn_set	miso_car_lib.h	/^void turn_set(int v)$/;"	f
turn_straight	miso_car_lib.h	/^void turn_straight()$/;"	f
txsubchans	videodev2.h	/^	__u32			txsubchans;$/;"	m	struct:v4l2_modulator
type	state_manage.h	/^	char type;$/;"	m	struct:car_state
type	videodev2.h	/^	__u32			type;		\/* Frame interval type the device supports. *\/$/;"	m	struct:v4l2_frmivalenum
type	videodev2.h	/^	__u32			type;		\/* Frame size type the device supports. *\/$/;"	m	struct:v4l2_frmsizeenum
type	videodev2.h	/^	__u32	     type;		\/*  Type of input *\/$/;"	m	struct:v4l2_input
type	videodev2.h	/^	__u32	     type;		\/*  Type of output *\/$/;"	m	struct:v4l2_output
type	videodev2.h	/^	__u32	type;$/;"	m	struct:v4l2_timecode
type	videodev2.h	/^	enum v4l2_buf_type      type;$/;"	m	struct:v4l2_buffer	typeref:enum:v4l2_buffer::v4l2_buf_type
type	videodev2.h	/^	enum v4l2_buf_type      type;$/;"	m	struct:v4l2_crop	typeref:enum:v4l2_crop::v4l2_buf_type
type	videodev2.h	/^	enum v4l2_buf_type      type;$/;"	m	struct:v4l2_cropcap	typeref:enum:v4l2_cropcap::v4l2_buf_type
type	videodev2.h	/^	enum v4l2_buf_type      type;$/;"	m	struct:v4l2_requestbuffers	typeref:enum:v4l2_requestbuffers::v4l2_buf_type
type	videodev2.h	/^	enum v4l2_buf_type  type;              \/* buffer type        *\/$/;"	m	struct:v4l2_fmtdesc	typeref:enum:v4l2_fmtdesc::v4l2_buf_type
type	videodev2.h	/^	enum v4l2_buf_type type;$/;"	m	struct:v4l2_format	typeref:enum:v4l2_format::v4l2_buf_type
type	videodev2.h	/^	enum v4l2_buf_type type;$/;"	m	struct:v4l2_sliced_vbi_cap	typeref:enum:v4l2_sliced_vbi_cap::v4l2_buf_type
type	videodev2.h	/^	enum v4l2_buf_type type;$/;"	m	struct:v4l2_streamparm	typeref:enum:v4l2_streamparm::v4l2_buf_type
type	videodev2.h	/^	enum v4l2_ctrl_type  type;$/;"	m	struct:v4l2_queryctrl	typeref:enum:v4l2_queryctrl::v4l2_ctrl_type
type	videodev2.h	/^	enum v4l2_tuner_type    type;$/;"	m	struct:v4l2_tuner	typeref:enum:v4l2_tuner::v4l2_tuner_type
type	videodev2.h	/^	enum v4l2_tuner_type  type;$/;"	m	struct:v4l2_frequency	typeref:enum:v4l2_frequency::v4l2_tuner_type
uart_fd	car_lib.h	/^int uart_fd;$/;"	v
userbits	videodev2.h	/^	__u8	userbits[4];$/;"	m	struct:v4l2_timecode
userptr	videodev2.h	/^		unsigned long   userptr;$/;"	m	union:v4l2_buffer::__anon8
uwait	car_lib.h	/^void uwait(int us)$/;"	f
v4l2_audio	videodev2.h	/^struct v4l2_audio$/;"	s
v4l2_audioout	videodev2.h	/^struct v4l2_audioout$/;"	s
v4l2_bitrate	videodev2.h	/^struct v4l2_bitrate {$/;"	s
v4l2_bitrate_mode	videodev2.h	/^enum v4l2_bitrate_mode {$/;"	g
v4l2_buf_type	videodev2.h	/^enum v4l2_buf_type {$/;"	g
v4l2_buffer	videodev2.h	/^struct v4l2_buffer$/;"	s
v4l2_capability	videodev2.h	/^struct v4l2_capability$/;"	s
v4l2_captureparm	videodev2.h	/^struct v4l2_captureparm$/;"	s
v4l2_clip	videodev2.h	/^struct v4l2_clip$/;"	s
v4l2_colorspace	videodev2.h	/^enum v4l2_colorspace {$/;"	g
v4l2_control	videodev2.h	/^struct v4l2_control$/;"	s
v4l2_crop	videodev2.h	/^struct v4l2_crop {$/;"	s
v4l2_cropcap	videodev2.h	/^struct v4l2_cropcap {$/;"	s
v4l2_ctrl_type	videodev2.h	/^enum v4l2_ctrl_type {$/;"	g
v4l2_enc_idx	videodev2.h	/^struct v4l2_enc_idx {$/;"	s
v4l2_enc_idx_entry	videodev2.h	/^struct v4l2_enc_idx_entry {$/;"	s
v4l2_encoder_cmd	videodev2.h	/^struct v4l2_encoder_cmd {$/;"	s
v4l2_ext_control	videodev2.h	/^struct v4l2_ext_control$/;"	s
v4l2_ext_controls	videodev2.h	/^struct v4l2_ext_controls$/;"	s
v4l2_field	videodev2.h	/^enum v4l2_field {$/;"	g
v4l2_fmtdesc	videodev2.h	/^struct v4l2_fmtdesc$/;"	s
v4l2_format	videodev2.h	/^struct v4l2_format$/;"	s
v4l2_fourcc	videodev2.h	92;"	d
v4l2_fract	videodev2.h	/^struct v4l2_fract {$/;"	s
v4l2_framebuffer	videodev2.h	/^struct v4l2_framebuffer$/;"	s
v4l2_frequency	videodev2.h	/^struct v4l2_frequency$/;"	s
v4l2_frmival_stepwise	videodev2.h	/^struct v4l2_frmival_stepwise$/;"	s
v4l2_frmivalenum	videodev2.h	/^struct v4l2_frmivalenum$/;"	s
v4l2_frmivaltypes	videodev2.h	/^enum v4l2_frmivaltypes$/;"	g
v4l2_frmsize_discrete	videodev2.h	/^struct v4l2_frmsize_discrete$/;"	s
v4l2_frmsize_stepwise	videodev2.h	/^struct v4l2_frmsize_stepwise$/;"	s
v4l2_frmsizeenum	videodev2.h	/^struct v4l2_frmsizeenum$/;"	s
v4l2_frmsizetypes	videodev2.h	/^enum v4l2_frmsizetypes$/;"	g
v4l2_input	videodev2.h	/^struct v4l2_input$/;"	s
v4l2_jpegcompression	videodev2.h	/^struct v4l2_jpegcompression$/;"	s
v4l2_memory	videodev2.h	/^enum v4l2_memory {$/;"	g
v4l2_modulator	videodev2.h	/^struct v4l2_modulator$/;"	s
v4l2_mpeg_aspectratio	videodev2.h	/^enum v4l2_mpeg_aspectratio {$/;"	g
v4l2_mpeg_audio_crc	videodev2.h	/^enum v4l2_mpeg_audio_crc {$/;"	g
v4l2_mpeg_audio_emphasis	videodev2.h	/^enum v4l2_mpeg_audio_emphasis {$/;"	g
v4l2_mpeg_audio_encoding	videodev2.h	/^enum v4l2_mpeg_audio_encoding {$/;"	g
v4l2_mpeg_audio_l1_bitrate	videodev2.h	/^enum v4l2_mpeg_audio_l1_bitrate {$/;"	g
v4l2_mpeg_audio_l2_bitrate	videodev2.h	/^enum v4l2_mpeg_audio_l2_bitrate {$/;"	g
v4l2_mpeg_audio_l3_bitrate	videodev2.h	/^enum v4l2_mpeg_audio_l3_bitrate {$/;"	g
v4l2_mpeg_audio_mode	videodev2.h	/^enum v4l2_mpeg_audio_mode {$/;"	g
v4l2_mpeg_audio_mode_extension	videodev2.h	/^enum v4l2_mpeg_audio_mode_extension {$/;"	g
v4l2_mpeg_audio_sampling_freq	videodev2.h	/^enum v4l2_mpeg_audio_sampling_freq {$/;"	g
v4l2_mpeg_audiotype	videodev2.h	/^enum v4l2_mpeg_audiotype {$/;"	g
v4l2_mpeg_compression	videodev2.h	/^struct v4l2_mpeg_compression {$/;"	s
v4l2_mpeg_cx2341x_video_chroma_spatial_filter_type	videodev2.h	/^enum v4l2_mpeg_cx2341x_video_chroma_spatial_filter_type {$/;"	g
v4l2_mpeg_cx2341x_video_luma_spatial_filter_type	videodev2.h	/^enum v4l2_mpeg_cx2341x_video_luma_spatial_filter_type {$/;"	g
v4l2_mpeg_cx2341x_video_median_filter_type	videodev2.h	/^enum v4l2_mpeg_cx2341x_video_median_filter_type {$/;"	g
v4l2_mpeg_cx2341x_video_spatial_filter_mode	videodev2.h	/^enum v4l2_mpeg_cx2341x_video_spatial_filter_mode {$/;"	g
v4l2_mpeg_cx2341x_video_temporal_filter_mode	videodev2.h	/^enum v4l2_mpeg_cx2341x_video_temporal_filter_mode {$/;"	g
v4l2_mpeg_stream_type	videodev2.h	/^enum v4l2_mpeg_stream_type {$/;"	g
v4l2_mpeg_stream_vbi_fmt	videodev2.h	/^enum v4l2_mpeg_stream_vbi_fmt {$/;"	g
v4l2_mpeg_streamtype	videodev2.h	/^enum v4l2_mpeg_streamtype {$/;"	g
v4l2_mpeg_video_aspect	videodev2.h	/^enum v4l2_mpeg_video_aspect {$/;"	g
v4l2_mpeg_video_bitrate_mode	videodev2.h	/^enum v4l2_mpeg_video_bitrate_mode {$/;"	g
v4l2_mpeg_video_encoding	videodev2.h	/^enum v4l2_mpeg_video_encoding {$/;"	g
v4l2_mpeg_videotype	videodev2.h	/^enum v4l2_mpeg_videotype {$/;"	g
v4l2_output	videodev2.h	/^struct v4l2_output$/;"	s
v4l2_outputparm	videodev2.h	/^struct v4l2_outputparm$/;"	s
v4l2_pix_format	videodev2.h	/^struct v4l2_pix_format$/;"	s
v4l2_priority	videodev2.h	/^enum v4l2_priority {$/;"	g
v4l2_queryctrl	videodev2.h	/^struct v4l2_queryctrl$/;"	s
v4l2_querymenu	videodev2.h	/^struct v4l2_querymenu$/;"	s
v4l2_rect	videodev2.h	/^struct v4l2_rect {$/;"	s
v4l2_register	videodev2.h	/^struct v4l2_register {$/;"	s
v4l2_requestbuffers	videodev2.h	/^struct v4l2_requestbuffers$/;"	s
v4l2_sliced_vbi_cap	videodev2.h	/^struct v4l2_sliced_vbi_cap$/;"	s
v4l2_sliced_vbi_data	videodev2.h	/^struct v4l2_sliced_vbi_data$/;"	s
v4l2_sliced_vbi_format	videodev2.h	/^struct v4l2_sliced_vbi_format$/;"	s
v4l2_standard	videodev2.h	/^struct v4l2_standard$/;"	s
v4l2_std_id	videodev2.h	/^typedef __u64 v4l2_std_id;$/;"	t
v4l2_streamparm	videodev2.h	/^struct v4l2_streamparm$/;"	s
v4l2_timecode	videodev2.h	/^struct v4l2_timecode$/;"	s
v4l2_tuner	videodev2.h	/^struct v4l2_tuner$/;"	s
v4l2_tuner_type	videodev2.h	/^enum v4l2_tuner_type {$/;"	g
v4l2_vbi_format	videodev2.h	/^struct v4l2_vbi_format$/;"	s
v4l2_window	videodev2.h	/^struct v4l2_window$/;"	s
val	videodev2.h	/^	__u64 val;$/;"	m	struct:v4l2_register
val1	pxa_camera_zl.h	/^    int  val1;$/;"	m	struct:reg_set_s
val2	pxa_camera_zl.h	/^    int  val2;$/;"	m	struct:reg_set_s
value	state_manage.h	/^	int value;$/;"	m	struct:car_state
value	videodev2.h	/^		__s32 value;$/;"	m	union:v4l2_ext_control::__anon9
value	videodev2.h	/^	__s32		     value;$/;"	m	struct:v4l2_control
value64	videodev2.h	/^		__s64 value64;$/;"	m	union:v4l2_ext_control::__anon9
vbi	videodev2.h	/^		struct v4l2_vbi_format		vbi;     \/\/ V4L2_BUF_TYPE_VBI_CAPTURE$/;"	m	union:v4l2_format::__anon12	typeref:struct:v4l2_format::__anon12::v4l2_vbi_format
version	videodev2.h	/^	__u32   version;        \/* should use KERNEL_VERSION() *\/$/;"	m	struct:v4l2_capability
vi_aspect_ratio	videodev2.h	/^	enum v4l2_mpeg_aspectratio	vi_aspect_ratio;$/;"	m	struct:v4l2_mpeg_compression	typeref:enum:v4l2_mpeg_compression::v4l2_mpeg_aspectratio
vi_bframes_count	videodev2.h	/^	__u16				vi_bframes_count;$/;"	m	struct:v4l2_mpeg_compression
vi_bitrate	videodev2.h	/^	struct v4l2_bitrate		vi_bitrate;$/;"	m	struct:v4l2_mpeg_compression	typeref:struct:v4l2_mpeg_compression::v4l2_bitrate
vi_frame_rate	videodev2.h	/^	__u32				vi_frame_rate;$/;"	m	struct:v4l2_mpeg_compression
vi_frames_per_gop	videodev2.h	/^	__u16				vi_frames_per_gop;$/;"	m	struct:v4l2_mpeg_compression
vi_pesid	videodev2.h	/^	__u8                            vi_pesid;$/;"	m	struct:v4l2_mpeg_compression
vi_type	videodev2.h	/^	enum v4l2_mpeg_videotype	vi_type;$/;"	m	struct:v4l2_mpeg_compression	typeref:enum:v4l2_mpeg_compression::v4l2_mpeg_videotype
vidbuf	miso_camera.h	/^struct pxa_video_buf* vidbuf;$/;"	v	typeref:struct:pxa_video_buf
w	videodev2.h	/^	struct v4l2_rect        w;$/;"	m	struct:v4l2_window	typeref:struct:v4l2_window::v4l2_rect
wait	car_lib.h	/^void wait(int se)$/;"	f
width	miso_camera.h	/^	int width;$/;"	m	struct:pxa_camera
width	pxa_lib.h	/^	int	width;$/;"	m	struct:pxacam_setting
width	pxa_lib.h	/^	int width,height;$/;"	m	struct:pxa_rect
width	pxa_lib.h	/^	int width,height;$/;"	m	struct:pxa_video_buf
width	videodev2.h	/^	__s32   width;$/;"	m	struct:v4l2_rect
width	videodev2.h	/^	__u32			width;		\/* Frame width *\/$/;"	m	struct:v4l2_frmivalenum
width	videodev2.h	/^	__u32			width;		\/* Frame width [pixel] *\/$/;"	m	struct:v4l2_frmsize_discrete
width	videodev2.h	/^	__u32         		width;$/;"	m	struct:v4l2_pix_format
width_scan_point	cam_values.h	/^int width_scan_point = MIDWIDTH;$/;"	v
win	videodev2.h	/^		struct v4l2_window		win;     \/\/ V4L2_BUF_TYPE_VIDEO_OVERLAY$/;"	m	union:v4l2_format::__anon12	typeref:struct:v4l2_format::__anon12::v4l2_window
winker_light	car_lib.h	/^void winker_light(char* status)$/;"	f
write_buf	car_lib.h	/^unsigned char write_buf[3];$/;"	v
writebuffers	videodev2.h	/^	__u32              writebuffers; \/*  # of buffers for write *\/$/;"	m	struct:v4l2_outputparm
x	cam_values.h	/^	int x;		\/\/ x좌표 (0~319)$/;"	m	struct:p_point
x	pxa_lib.h	/^	int x,y;$/;"	m	struct:pxa_rect
y	cam_values.h	/^	int y;		\/\/ y좌표 (0~239)$/;"	m	struct:p_point
y	pxa_lib.h	/^			unsigned char *y,*cb,*cr;$/;"	m	struct:pxa_video_buf::__anon3::__anon5
y	pxa_lib.h	/^	int x,y;$/;"	m	struct:pxa_rect
ycbcr	pxa_lib.h	/^		}ycbcr;$/;"	m	union:pxa_video_buf::__anon3	typeref:struct:pxa_video_buf::__anon3::__anon5
ystep	pxa_lib.h	/^			unsigned int ystep,cbstep,crstep;$/;"	m	struct:pxa_video_buf::__anon3::__anon5
